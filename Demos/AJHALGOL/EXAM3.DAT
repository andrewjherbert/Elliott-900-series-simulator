on
telecode 903
at ptr file ALG16KLG(AJH).BIN
j 8181
st 8175

at ptr inline

EXAM3;
"begin"
   "comment" 04-MAR-1998. With parts written in 1963 
             by TJ Dekker, Matematisch Centrum,
             (det was AP204, sol was AP205), and this
             "normal equations" program was originally
             written in 1986;

   "code" "real" "procedure" det(a,n,p); "value" n; 
   "integer" n; "array" a; "integer" "array" p; "algol";

   "code" "procedure" sol(lu,b,n,p); "value" n; "integer" n;
   "array" lu,b; "integer" "array" p; "algol";

   "code" "real" "procedure" sigma(j,n,z); "value" n;
   "integer" j,n; "real" z; "algol";

   "code" "procedure" copy(j,m,n,z,v); "value" m,n;
   "integer" j,m,n; "real" z,v; "algol";

   "comment" must leave 16 storage locations for det
             as the FIRST declaration;
   "real" d1,d2,d3,d4,d5,d6,d7,d8;

   "integer" c,n;

   "real" "procedure" read; "read" read;

   "comment" PROGRAM START. Must pretend to call sqrt,
             as otherwise it would not get loaded;
   "if" "false" "then" d1:=sqrt(d2);

   "print" '04-MAR-1998'L``;
   "read" c, n; 
   "begin"
      "real" "array" alpha[1:c,1:n],a[1:n,1:n],
                     b[1:n],beta[1:c];
      "integer" "array" p[1:n];
      "real" deter, plot; "integer" ast,i,j,k;      
                        
      "comment" get input data;
      "for" k:=1 "step" 1 "until" c "do" 
      "begin"
         copy(j,1,n,alpha[k,j],read); beta[k]:=read
      "end";
 
      "comment" form normal equations;
      "for" i:=1 "step" 1 "until" n "do"
      "begin"
         copy(j,i,n,a[i,j],sigma(k,c,alpha[k,i]*alpha[k,j]));
         copy(j,i+1,n,a[j,i],a[i,j]);
         b[i]:=sigma(k,c,alpha[k,i]*beta[k])
      "end";
 
      "comment" solve them;
      deter:=det(a,n,p); sol(a,b,n,p);

      "comment" print fit of results and errors;
      "for" j:=1 "step" 1 "until" n "do"
      "begin"
         "print" ''L`X`, same line, digits(1), j,
         ' = `, aligned(3,2), b[j], '  secs. per `;
         "if" j=1 "then" "print" 'attempted` "else"
         "if" j=2 "then" "print" 'generated` "else"
         "if" j=3 "then" "print" 'daytime generated`;
         "print" ' invoice`
      "end";
      "print" ''L2`ACTUAL      ERR %'L`------      -----`;
      "for" k:=1 "step" 1 "until" c "do" 
      "begin"
         plot:=100*((beta[k]-sigma(j,n,alpha[k,j]*b[j]))/beta[k]);
         "print" '  `, digits(5), entier(100*beta[k] + 0.5),
         same line, '     `, aligned(3,1), plot;
         "if" alpha[k,3] > 0 "then" "print" '  **`
                             "else" "print" '    `;
         ast:=(30 + entier(0.5 + (plot/5)));
         "for" j:=1 "step" 1 "until" ast "do" "print" ' `;
         "print" '*`;
         "for" j:=ast+2 "step" 1 "until" 30 "do" "print" ' `;
         "if" ast < 30 "then" "print" '.`
      "end"
   "end"
"end"

<!!>
j 12
st 1715
c link in library (which includes simps)
at ptr file LIBRARY.RLB
j 9
st 8000
c execute
at ptr inline

   (input data)
   34  3
  1.52    .18     0     1.94
  1.40    .14     0     2.24
 12.61  10.95     0   128.15
  2.73    .81     0     7.69
  2.23    .21     0     3.33
  2.19    .16     0     3.18
  2.12    .48     0     5.89
  1.74    .15     0     2.74
  1.71    .17     0     2.14
  5.02   2.78   2.78   24.55
  2.74    .50     0     7.48
  2.77    .57     0     6.53
  2.68    .42     0     4.70
 15.08  12.60     0    93.65
  3.45    .62     0     7.25
  3.06    .60     0     7.37
  2.65    .32     0     6.37
  3.05    .30     0     5.31
  3.39    .64     0     9.92
  3.05    .29     0     5.01
  2.94    .53     0     7.58
 13.97  11.19     0   140.16

  (these go faster)
  3.04    .29     0     3.23
  2.89    .37     0     3.51
  2.58    .24     0     3.09
  2.70    .26     0     2.74
 28.90  25.96  25.96  348.61
  3.98    .83    .83   15.02
 21.53  18.06     0   139.47
  4.22    .76     0     7.25
  3.63    .34     0     4.02
  3.38    .31     0     3.23
  3.23    .35     0     3.70
 15.32  11.83     0   102.54
<!!>
sel out tty
j 10
st 1715
sh t


