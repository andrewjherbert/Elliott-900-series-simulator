
(( GPM 09/05/2013 A.J. HERBERT )

*16403 (16K clearstore, start at 8, print labels)
                                  
( Based on GPM10 from Terry Froggatt archive.   )
( Monitor calls added as described in Stratchey )
( paper with improved Monitor 11.               )
( Also small coding error in ENDFN fixed at     )
( LAB6.  DEF and UPDATE modified to allow DEF   )
( to have second argument for use as padding.   )
( I/O modified to use CHIOL.                    )
( N.B. Requires first character of tape to be   )
( newline                                       )
( Enter at  8 to run macrogeneration.           )
( Enter at  9 to continue after halt            )
( Enter at 10 to run with new symbols           )
(    symbols must be at head of tape in order   )
(         > [ ? : ] <                           )
( [...] macro                                   )
( <...> quoted text                             )
( ?n    parameter                               )
( :     argument separator                      )
( \     comment - skip to end of line, then     )
(       skip to first non-blank.                )

[GPM ST CHIPL CHIPE CHIPF CHOPL CHOPE CHOPC]
GPM      8       STARTALL        ( normal macrogeneration )
         8       CONT            (restart after halt )
         4       +1              ( run with new symbols )
         5       CHOPC           ( set 900 telecode )
         4       +0              ( indicate new tape )
         5       CHIPF
         4       +2              (load new symbols )
         5       X
         11      CHIPL         	 ( skip initial line feed )
         8       CHIPE
         1       -10
         7       ;+2
         8       MON6
LZ       11      CHIPL
         8       CHIPE
         0       X
         /5      WARC
         10      X
         4       X
         2       +9
         7       START2
         8       LZ
CONT     4       +0              ( indicate new input tape )
         5       CHIPF
         8       START
HALT     4       +20
         11      CHOPL
         8       CHOPE
         8       ;+0
STARTALL
         4       -7              ( set up standard warning characters )
         5       W
LSYM     0       W
         /4      SYMS+7
         /5      SQC+7
         10      W
         4       W
         9       LSYM
         4       +1
         5       CHOPC           ( set 900 telecode )
         4       +0
         5       CHIPF           ( indicate new input tape )
START2   5       H
         5       P
         5       F
         5       C
         5       Q
         5       EF
         4       +39
         5       S
         4       +33
         5       E
         11      LWRST
         8       WRST
         \^^^
         \GPM
         \^^\
         8       START
LREADCH  >1
READCH   11      CHIPL
         8       CHIPE
         5       A
	 1	 -20
	 7	 LHALT          ( halt code )
	 4	 A
	 2	 SSKIP		( test for skip character)
         7       LSKIP
LREXIT	 0	 LREADCH
	 /8	 1	
LSKIP	 11	 CHIPL		( look for newline )
	 8	 CHIPE
	 1	 -10
	 7	 LSKWS		( now skip white space )
	 1	 -10
	 7	 LHALT
	 8	 LSKIP		( keep searching for newline )	
LSKWS	 11	 CHIPL
	 8	 CHIPE
	 1	 -32
	 7  	 LSKWS		( skip space )
	 1	 +23
         7	 LSKWS		( skip tab )
	 1	 +9		( restore character )
	 8 	 READCH+2	( rejoin body )
LHALT	 4	 SAPPLY		( turn halt code to ] )
	 0	 LREADCH	( return )
	 8	 LREXIT
LWRITECH
         >1
WRITECH  4       A
 	 9	 WNEG
         11      CHOPL
         8       CHOPE
         0       LWRITECH
         /8      1
WNEG	 4	 +63		( substitute ? for markers )
	 8	 WRITECH+2
LLOAD    >1
LOAD     4       H
         7       L4
         0       S
         4       A
         /5      ST
         10      S
         8       L5
L4       11      LWRITECH
         8       WRITECH
L5       0       LLOAD
         /8      1
LNEXTCH  >1
NEXTCH   4       C
         7       L6
         0       C
         /4      ST
         5       A
         10      C
         8       L7
L6       11      LREADCH
         8       READCH
L7       0       LNEXTCH
         /8      1
LFIND    >1
FIND     5       W
         4       E
         8       LA2
LA1      0       A
         /4      ST
LA2      5       A
         9       MON7
         4       -1
         5       R
LA3      10      R
         0       W
         /4      ST
         2       R
         7       LA4
         4       W
         1       R
         5       T
         4       A
         1       R
         1       +1
         5       1
         /4      ST
         0       T
         /2      ST
         7       LA3
         8       LA1
LA4      /4      ST
         1       A
         1       +1
         5       W
         0       LFIND
         /8      1
START    11      LNEXTCH
         8       NEXTCH
         4       -1
         5       W
LA5      10      W
         4       W
         2       +8
         7       COPY
         0       W
         /4      WARC
         2       A
         /7      JLIST
         8       LA5
JLIST    8       ENDFN
         8       EXIT
         8       COPY
         8       FN
         8       LOADARG
         8       NEXTITEM
         8       APPLY
QUOTE    10      Q
         8       Q2
COPY     11      LLOAD
         8       LOAD
SCAN     4       Q
         7       START
Q2       11      LNEXTCH
         8       NEXTCH
         4       A
         2       SQO
         7       LSQO
         4       A
         2       SQC
         7       LSQC
         8       COPY
LSQO     10      Q
         8       COPY
LSQC     4       Q
         1       -1
         5       Q
         7       START
         8       COPY
FN       0       S
         4       H
         /5      ST
         4       F
         /5      ST+1
         4       +0
         /5      ST+2
         /5      ST+3
         4       S
         1       +1
         5       F
         1       +2
         5       H
         1       +1
         5       S
         8       START
NEXTITEM
         4       H
         7       COPY            ( H = 0? )
         0       H
         /1      ST
         2       S
         /5      ST              ( ST[H] := S-H-ST[H] )
         0       S
         4       +0
         /5      ST              ( ST[S] := 0 )
         4       S
         5       H               ( H := S )
         10      S               ( S := S + 1 )
         8       START
APPLY    4       P
         2       F
         9       MON1            ( F < P? )
         4       H
         7       COPY            ( H = 0? )
         2       S
         0       H
         /5      ST              ( ST[H] := S-H )
         0       S
         4       MARKER
         /5      ST              ( ST[S] := MKR )
         4       C
         0       F
         /5      ST+1            ( ST[F+1] := C )
         /4      ST-1
         5       H               ( H := ST[F-1] )
         4       F
         2       S
         1       +2
         /5      ST-1            ( ST[F-1] := S-F+2 )
         10      S               ( S := S+1 )
         /4      ST
         5       W1              ( W1 := ST[F] )
         4       P
         /5      ST              ( ST[F] := P )
         4       F
         5       P               ( P := F )
         4       W1
         5       F               ( F := W1 := ST[F] )
         4       H
         7       LAB1            ( H = 0? )
         0       P
         /4      ST-1            ( ST[H] := ST[H]+ST[P-1] )
         0       H
         /1      ST
         /5      ST
LAB1     4       P
         1       +2              ( P+2 )
         11      LFIND
         8       FIND
         0       W
         /4      ST
         9       JUMPIFMARKED
         4       W
         1       +1
         5       C               ( C := W+1 )
         8       START
JUMPIFMARKED
         2       +0
         5       1
SWI      /8      SWI
         8       DEF
         8       VAL
         8       UPDATE
         8       BIN
         8       DEC
         8       BAR
LOADARG  4       P
         7       TEST
         11      LNEXTCH
         8       NEXTCH
         4       P
         1       +2
         5       W
         4       LIT0
         2       A
         5       W1
         9       MON3
         4       -1
         5       R
LAB2     10      R
         4       R
         2       W1
         7       LAB3
         0       W
         /4      ST
         1       W
         5       W
         0       W
         /4      ST
         2       MARKER
         7       MON4
         8       LAB2
TEST     4       H
         7       COPY
         8       MON2
LAB3     4       +0
         5       R
LAB4     10      R
         4       R
         0       W
         /2      ST
         7       START
         4       W
         1       R
         5       1
         /4      ST
         5       A
         11      LLOAD
         8       LOAD
         8       LAB4
ENDFN    4       F
         2       P
         9       MON5            ( P<F? )
         0       S
         4       E
         /5      ST              ( ST[S] := E )
         4       S
         5       A               ( A := S )
LAB5     0       P
         /4      ST-1            ( ST[P-1] )
         1       P               ( P+ST[P-1] )
         2       +1              ( 1-P-ST[P-1] )
         0       A
         /1      ST              ( ST[A]+1-P-ST[P-1] )
         9       LAB6            ( ST[A] < P-1+ST[P-1] )
         0       P
         /4      ST-1            ( ST[P-1] )
         0       A
         /2      ST
         5       W               ( W := ST[A]-ST[P-1] )
         /4      ST
         5       A               ( A := ST[A] )
         4       W
         /5      ST              ( ST[A] := W )
         8       LAB5
LAB6     0       A               ( AJH correction)
         /4      ST
         5       W
LAB8     4       P
         2       W
         9       LAB7            ( W < P? )
         0       W
         /4      ST
         5       W               ( W := ST[W] )
         8       LAB8
LAB7     4       W
         0       A
         /5      ST              ( ST[A] := W )
         0       S
         /4      ST
         5       E               ( E := ST[S] )
         4       H
         7       LAB9            ( H = 0? )
         0       P
         2       P               ( P < H? )
         9       LAB10
         /4      ST-1            ( ST[P-1] )
         0       H
         /2      ST
         /5      ST              ( ST[H] := ST[H]-ST[P-1] )
         8       LAB9
LAB10    /4      ST-1            ( ST[P-1] )
         2       H
         5       H               ( H := H-ST[P-1] )
LAB9     4       P
         1       -1
         5       A               ( A := P-1 )
         0       P
         /1      ST-1
         5       W               ( W := P-1+ST[P-1] )
         /4      ST+1
         5       C               ( C := ST[P+1] )
         /4      ST-1
         2       S
         5       S               ( S := S-ST[P-1] )
         /4      ST
         5       P               ( P := ST[P] )
LAB11    4       A
         2       S
         7       START
         0       W
         /4      ST
         0       A
         /5      ST              ( ST[A] := ST[W] )
         10      A               ( A := A+1 )
         10      W               ( W := W+1 )
         8       LAB11
EXIT     4       C
         7       EL
         8       MON8
EL       4       H
         7       HALT
         8       MON8
DEF      4       H
         7       LAB12
         0       P
         /4      ST-1
         2       +6
         0       H
         /1      ST
         /5      ST
LAB12    0       P		( ST[P-1] := 6 )
         4       +6
         /5      ST-1
         4       E		( ST[P+5] := E )
         /5      ST+5
	 4	 P		( Martin Richard's correction )
	 1	 +6		( W := P+6 )
	 5	 W
	 0	 W		( W := W + ST[W] )
	 /4	 ST
	 1	 W
	 5	 W
	 0	 W		( ST[W+ST[W]] := MARKER )
	 /4	 ST
	 1	 W
	 5	 W1
	 4	 MARKER
	 0	 W1
	 /5	 ST
	 4	 W		( ST[W] := S - W - 1 )
	 2	 S
	 1	 -1
	 0	 W
	 /5 	 ST
         4       P		( E := P+5 )
         1       +5
         5       E
         8       ENDFN
VAL      4       P
         1       +6
         11      LFIND
         8       FIND
LAB13    0       W
         /4      ST+1
         2       MARKER
         7       ENDFN
         /4      ST+1
         5       A
         10      W
         11      LLOAD
         8       LOAD
         8       LAB13
UPDATE   4       P
         1       +9
         11      LFIND
         8       FIND
         0       P
         4       P
         1       +9
         /1      ST+9
         5       A
         0       A
         /4      ST
         0       W
         /2      ST
         9       MON9
         4       +0
         5       R
LAB14    10      R		( MR correction FOR r = 1 TO ST[A]-1 DO ... )
         4       R
         0       A
         /2      ST
	 1	 -1
         9       LAB30
         4       W		( ST[W+r] := ST[A+r] )
         1       R
         5       T
         4       A
         1       R
         5       1
         /4      ST
         0       T
         /5      ST
         8       LAB14
LAB30	 0	 A		( ST[W+ST[A]] := s_marker )
	 /4	 ST
	 1	 W
	 5	 W1
	 4	 MARKER
	 0	 W1
	 /5	 ST
	 8	 ENDFN
BIN      4       +0
         5       W
         0       P
         /4      ST+7
         2       +43		( + )
         7       LAB15
         /4      ST+7
         2       +45		( - )
         7       LAB15
         4       +7
         8       LAB16
LAB15    4       +8
LAB16    1       P
         5       A
LAB17    0       A
         /4      ST
         2       MARKER
         7       LAB18
         4       LIT0
         /2      ST
         5       T
         9       MON10
         2       +9
         9       MON10
         10      A
         4       W
         12      +10
         14      17
         1       T
         5       W
         8       LAB17
LAB18    0       P
         /4      ST+7
         2       +45		( - )
         7       LAB20
         4       W
         8       LAB19
LAB20    4       W
         2       +0
LAB19    5       A
         11      LLOAD
         8       LOAD
         8       ENDFN
DEC      0       P
         /4      ST+7
         5       W
         9       LAB21
         8       LAB22
LAB21    2       +0
         5       W
         4       +45		( - )
         5       A
         11      LLOAD
         8       LOAD
LAB22    4       +1
         5       W1
LAB23    4       W1
         12      +10
         14      17
         5       T
         2       W
         9       LAB24
         4       T
         5       W1
         8       LAB23
LAB24    4       W
         5       X
         4       W1
         5       Y
         11      LQUOT
         8       QUOT
         1       LIT0
         5       A
         11      LREM
         8       REM
         5       W
         4       W1
         5       X
         4       +10
         5       Y
         11      LQUOT
         8       QUOT
         5       W1
         11      LLOAD
         8       LOAD
         4       +1
         2       W1
         9       ENDFN
         8       LAB24
X        >1
Y        >1
LQUOT    >1
QUOT     4       X
         0       +0
         14      8176
         13      Y
         14      8191
         0       LQUOT
         /8      1
LREM     >1
REM      11      LQUOT
         8       QUOT
         12      Y
         14      17
         2       X
         0       LREM
         /8      1
BAR      0       P
         /4      ST+9
         5       X
         /4      ST+11
         5       Y
         /4      ST+7
         2       +43		( + )
         7       LAC1
         1       +2
         7       LAC2
         1       +2
         7       LAC3
         1       -5
         7       LAC4
         11      LREM
         8       REM
         8       LAC5
LAC1     4       X
         1       Y
         8       LAC5
LAC2     4       Y
         2       X
         8       LAC5
LAC3     11      LQUOT
         8       QUOT
         8       LAC5
LAC4     4       X
         12      Y
         14      17
LAC5     5       A
         11      LLOAD
         8       LOAD
         8       ENDFN
         4       A
         5       Y
         4       -5
         5       R
         4       EF
         5       X
         1       LIT0
LAC6     5       A
         11      LWRITECH
         8       WRITECH
         4       R
         7       LAC7
         10      R
         4       +42
         8       LAC6
LAC7     5       EF
         4       Y
         5       A
         4       +2
         2       X
         9       COPY
LAC8     8       LAC8
MON1     11      LWRST
         8       WRST
         \^MO
         \NIT
         \OR:
         \ Un
         \mat
         \che
         \d s
         \emi
         \col
         \on 
         \in 
         \def
         \ini
         \tio
         \n o
         \f \
         4       P               ( Item[P+2] )
         1       +2
         11      LITEM
         8       ITEM
LMON1    11      LWRST
         8       WRST
         \^If
         \ th
         \is 
         \had
         \ be
         \en
         \quo
         \ted
         \ th
         \e r
         \esu
         \lt
         \wou
         \ld
         \be^
         \\
         10      EF
         4       EF
         2       +20
         9       FINISH
         8       COPY
MON2     11      LWRST
         8       LWRST
         \^MO
         \NIT
         \OR:
         \ Un
         \quo
         \ted
         \ ti
         \lde
         \ in
         \ ar
         \gum
         \ent
         \ li
         \st 
         \of 
         \\
         4       F               ( Item[F+2] )
         1       +2
         11      LITEM
         8       ITEM
         8       LMON1
MON3     4       A
         5       AA
         11      LWRST
         8       WRST
         \^MO
         \NIT
         \OR:
         \ Im
         \pos
         \sib
         \le
         \arg
         \ume
         \nt
         \num
         \ber
         \ \
         4       AA
         5       A
         11      LWRITECH
         8       WRITECH
         11      LWRST
         8       WRST
         \ in
         \ de
         \fin
         \iti
         \on
         \of
         \\ 
         4       P               ( Item[P+2] )
         1       +2
         11      LITEM
         8       ITEM
         4       +1
         11      LWRSIR
         8       WRSIR
         8       MON11
MON4     4       A
         5       AA
         11      LWRST
         8       WRST
         \^MO
         \NIT
         \OR:
         \ No
         \ ar
         \gum
         \ent
         \ \
         4       +0
         5       H
         4       AA
         5       A
         11      LLOAD
         8       LOAD
         11      LWRST
         8       LWRST
         \ in
         \ ca
         \ll 
         \for
         \ \
         4       P
         1       +2
         11      LITEM
         8       ITEM
         8       MON11
MON5     11      LWRST
         8       WRST
         \^MO
         \NIT
         \OR:
         \ Te
         \rmi
         \nat
         \or
         \in 
         \\
         4       C
         7       ;+2
         8       LMN51           ( characters coming from input )
         11      LWRST           ( characters coming from macro )
         8       WRST
         \inp
         \ut
         \str
         \eam
         \. P
         \rob
         \abl
         \y m
         \ach
         \ine
         \ er
         \rro
         \r.\
         8       MON11
LMN51    11      LWRST
         8       WRST
         \arg
         \ume
         \nt
         \lis
         \t f
         \or
         \\
         4       F
         1       +2
         11      LITEM
         8       ITEM
         11      LWRST
         8       WRST
         \^Pr
         \oba
         \bly
         \ du
         \e t
         \o a
         \ se
         \mic
         \olo
         \n m
         \iss
         \ing
         \ fr
         \om
         \the
         \ de
         \fin
         \iti
         \on
         \of
         \\
         4       P
         1       +2
         11      LITEM
         8       ITEM
         11      LWRST
         8       WRST
         \^If
         \ a
         \fin
         \al
         \sem
         \ico
         \lon
         \ is
         \ ad
         \dde
         \d t
         \he
         \ re
         \sul
         \t i
         \s^\
         4       C
         1       -1
         5       C
         10      EF
         4       EF
         2       +20
         9       FINISH
         8       APPLY
( Monitor 6 was parity error )
MON6     11      LWRST
         8       WRST
         \Int
         \ern
         \al
         \Err
         \or\
         8       ;+0
MON7     11      LWRST
         8       WRST
         \^MO
         \NIT
         \OR:
         \ Un
         \def
         \ine
         \d n
         \ame
         \ \
         4       W
         11      LITEM
         8       ITEM
         8       MON11
MON8     11      LWRST
         8       WRST
         \^MO
         \NIT
         \OR:
         \ Un
         \mat
         \che
         \d >
         \. P
         \rob
         \abl
         \y m
         \ach
         \ine
         \ er
         \rro
         \r.\
         8       MON11
MON9     11      LWRST
         8       WRST
         \^MO
         \NIT
         \OR:
         \ Up
         \dat
         \e a
         \rgu
         \men
         \t t
         \oo
         \lon
         \g f
         \or
         \\
         4       P
         1       +9
         11      LITEM
         8       ITEM
         8       MON11
MON10    11      LWRST
         8       WRST
         \^MO
         \NIT
         \OR:
         \ No
         \n-d
         \igi
         \t i
         \n n
         \umb
         \er\
PP       >1
FF       >1
MON11    10      EF              ( increment error count )
         4       EF
         2       +20
         7       FINISH
         4       P
         5       PP
         4       F
         5       FF
         4       +20             ( W := 20 )
         5       W
         11      LWRST
         8       WRST
         \^Cu
         \rre
         \nt
         \mac
         \ros
         \ ar
         \e\
LIM19    4       F               ( until P=F=0 do )
         7       ;+2
         8       ;+3
         4       P
         7       LIM11
         4       P
         2       F               ( test P>F )
         9       LIM12
         4       F               ( P<=F: W1, F := F+2, ST[F] )
         1       +2
         5       W1
         0       F
         /4      ST
         5       F
         11      LWRST
         8       WRST
         \^Al
         \rea
         \dy 
         \ent
         \ere
         \d \
         8       LIM13
LIM12    4       P               ( P>F: W1, P := P+2, ST[P] )
         1       +2
         5       W1
         0       P
         /4      ST
         5       P
         11      LWRST
         8       WRST
         \^No
         \t y
         \et
         \ent
         \ere
         \d \
LIM13    4       +1              ( for r = 1 to W do )
         5       R
LIM14    2       W
         9       LIM16
         4       W1              ( Item[W1] )
         11      LITEM
         8       ITEM
         0       W1              ( if ST[W1]=0 do break )
         /4      ST
         7       LIM16
         1       W1              ( W1 := W1+ST[W1] )
         5       W1
         0       W1
         /4      ST
         2       MARKER          ( if ST[W1] = Marker do break )
         7       LIM16
         4       W               ( unless W = 1 do )
         2       +1
         7       LIM15
         11      LWRST
         8       WRST
         \^Ar
         \g \
         4       R
         1       LIT0
         5       A
         11      LWRITE
         8       WRITEC
         4       +32		( space )
         5       A
         11      LWRITE
         8       WRITEC
LIM15    10      R               ( advance r )
         4       R
         8       LIM14
LIM16    4       +1
         5       W
         8       LIM19           ( $4 end until P=F=0 )
LIM11    11      LWRST
         8       WRST
         \^En
         \d o
         \f m
         \oni
         \tor
         \ pr
         \int
         \ing
         \^\
         4       +81           	 ( A := 'Q' )
         5       A
         11      LLOAD           ( Load )
         8       LOAD
         4       FF
         5       F
         4       PP
         5       P               ( goto P>F ->EndFn, Start )
         2       F
         9       ENDFN
         8       START
FINISH   11      LWRST
         8       WRST
         \^^^
         \...
         \Aba
         \ndo
         \ned
         \^^\
         8       ;+0
LWRSIR   >1                      ( WRCH - write internal code )
WRSIR    1       -1
         7       WCNL            ( test for newline )
         1       +33             ( convert to telecode )
	 5	 A
         11      LWRITE
         8       WRITEC
WRCHEX   0       LWRSIR
         /8      1
WCNL     4       +10             ( type newline sequence )
         11      CHOPL
         8       CHOPE
         8       WRCHEX
ASAVE	 >1
LWRST    >1                      ( WRST - write string to tty, terminated by \ )
WRST     4	 A		 ( protect A )
	 5	 ASAVE
	 0       LWRST
         10      LWRST
         /4      1               ( next word )
         5       STCH
         14      8180            ( first character )
         3       STCH
         6       +63
         2       LITL
         7       WRSTEX
         2       LITL
         11      LWRSIR
         8       WRSIR
         0       STCH            ( second character )
         14      7
         3       STCH
         6       +63
         2       LITL
         7       WRSTEX
         2       LITL
         11      LWRSIR
         8       WRSIR
         0       STCH            ( third character )
         14      7
         3       STCH
         6       +63
         2       LITL
         7       WRSTEX
         2       LITL
         11      LWRSIR
         8       WRSIR
         8       WRST+2
WRSTEX   4	 ASAVE		( restore A )
	 5	 A
	 0       LWRST
         /8      1
STCH     >1
LITEM    >1                      ( Item )
ITEM     5       XX
         4       H
         5       HH              ( h, a := H, A )
         4       A
         5       AA
         4       +0              ( H := 0 )
         5       H
         4       +1
         5       K
         0       XX              ( if  ST[x] = 0 )
         /4      ST
         7       ;+2             ( =0: tt := S-x-1 )
         8       ;+3             ( <>0: tt := ST[x]-1 )
         4       XX
         2       S
         1       -1
         5       TT
LIL1     4       K               ( for k = 1 to tt do )
         2       TT
         9       LIL2
         4       XX              ( A := ST[x+k] )
         1       K
         5       A
         0       A
         /4      ST
         5       A
         11      LWRITECH        ( replace Load by WRITE )
         8       WRITECH
         10      K
         4       K
         8       LIL1            ( end for )
LIL2     0       XX              ( if ST[x] = 0 do Write... )
         /4      ST
         7       LINCOM
LIEX     4       AA              ( A, H := a, h )
         5       A
         4       HH
         5       H
         0       LITEM           ( return )
         /8      1
LINCOM   11      LWRST
         8       WRST
         \...
         \ (I
         \nco
         \mpl
         \ete
         \)\
         8       LIEX
K        >1
TT       >1
HH       >1
AA       >1
XX       >1
EF       >1
A        >1
CO       >1
W        >1
W1       >1
R        >1
H        >1
P        >1
F        >1
C        >1
E        >1
Q        >1
S        >1
T        >1
MARKER
WARC     -128
         +20
SQC      >5
SQO      >1
SSKIP    >1
SYMS     +62                     ( > )
         +91                     ( [ )
         +63                     ( ? )
         +58                     ( : )
SAPPLY   +93                     ( ] )
         +60                     ( < )
	 +92			 ( \ )
LIT0     +48                     ( 0 )
LITL	 +03                     ( £ )

((PAPER TAPE INPUT & OUTPUT SUBROUTINE, 22/5/72)

[CHIP CHIPF CHIPL CHIPE CHOPF CHOPL CHOPE CHOPC ERRORL ERRORE]

(TELECODE INPUT SUBROUTINE)
(Appears, to the users programme, to read one 903/ISO or 920
 Telecode character from tape, and convert to internal
 code, but reads tape in one line at a time)
CHIPE    4       CHIPF
         7       FILBUF          (Test if first entry)
         4       CHIP
         1       -10             (C-10, test if <N>)
         7       FILBUF
         1       -10             (C-20, test if <H>)
         7       ;+0
READBF   0       BUFCT
         4       BUFCT
         1       -61
         9       ;+4
         /4      LINE-61         (Read character from m.s. end)
         14      8185
         8       ;+3
         /4      LINE            (Read character from l.s. end)
         6       &177
         5       CHIP
         10      BUFCT
         0       CHIPL
         /8      1
FILBUF   5       BUFCT
(+1)     4       +0
         5       BAR
(+3)     15      2048
         5       CHIP
         11      BITCTL
         8       BITCTE
         14      17
         9       CH1             (Parity error)
         4       CHIP
         7       FILBUF+3        (Ignore blanks)
         6       &177            (Delete parity from track 8)
         5       CHIP
         1       -127            (Ignore erases)
         7       FILBUF+3
         4       CHIPF           (Read first charater)
         7       ;+2             (Jump iff first entry)
         8       ;+3
         4       CHIP
         5       CHIPF           (Store first character)
         1       -13             (Test if 903/ISO C.R.)
         7       IN903
         1       +3              (Test if 903/ISO L.F./N.L.)
         7       IN903
         1       -8              (Test if 920 N.L.)
         7       IN920
         8       CH2             (1st character not newline)
IN920    4       BAR
         7       SIP
         4       CHIP
         1       -99             (Test if S)
         7       ;+6
         1       +40             (Test if <)
         7       ;+5
         1       +15             (Test if >)
         7       ;+4
         8       CH3             (Illegal character after vert. bar)
         4       -3
         1       -57
         1       +96
         8       DIP
SIP      4       CHIP
         1       -126            (Test if vertical bar)
         7       ;+2
         8       ;+3
         10      BAR
         8       FILBUF+3
         0       CHIP
         /4      CODTAB
         6       &177
         7       CH3             (Jump iff illegal character)
DIP      5       CHIP
         8       ;+4
IN903    4       CHIP
         1       -13             (C-13, test if C.R.)
         7       FILBUF+3
         0       BUFCT
         4       BUFCT
         1       -61
         9       ;+7
         /4      LINE-61
         14      8185
         4       CHIP
         14      7
         /5      LINE-61         (Store character in m.s. end)
         8       ;+3
         4       CHIP
         /5      LINE            (Store character in l.s. end)
         10      BUFCT
         4       CHIP
         1       -10             (C-10, test if <N>)
         7       CLECT
         1       -10             (C-20, test if <H>)
         7       CLECT
         4       BUFCT
         1       -121
         7       CH4             (Jump iff line too long)
         8       FILBUF+1
CLECT    5       BUFCT
         8       READBF
(TELECODE OUTPUT SUBROUTINE)
(Prints one or several internal code
 characters in 903/ISO or 920 Telecode;
 or in legible tape form)
CHOPE    5       CHOP
         6       +127
         5       OPC
         4       CHOPF
         7       BLANKS          (Test for 1st entry)
TESCOD   4       CHOPC
         7       OP920           (Test output telecode)
         9       OPLEG
(OP903)  4       OPC
         1       -9              (C-9,  test if <T>)
         7       ;+4
         1       -1              (C-10, test if <N>)
         7       ;+3
         8       INSPTY
         4       +19             (Prefix <T> by <S>)
         1       +141            (Carriage Return)
         15      6144
         8       INSPTY
OP920    0       OPC
         /4      CODTAB
         9       ;+4
         4       +126            (Vertical Bar)
         15      6144
         /4      CODTAB
         14      8185
         6       &177
         7       CH3             (Jump iff illegal character)
         5       OPC
INSPTY   4       OPC
         11      BITCTL
         8       BITCTE
         2       +0
         14      7
         1       OPC
         15      6144
         4       CHOP
         6       &177
         1       -10             (C-10, test if <N>)
         7       NL
         1       -10             (C-20, test if <H>)
         7       BLANKS
         8       OUTEND
OPLEG    4       OPC
         1       -20             (C-20, test if <H>)
         7       BLANKS
         1       -12
         9       ;+4             (Values below 32: Set to 0)
         1       -64
         9       ;+3             (32 to 95: Subtract 32)
         8       ;+3             (96 onwards: Subtract 64)
         4       -64
         1       +32
         1       +32
         14      8191
         5       B
         14      18
         0       B
         9       ;+3
         /4      LTAB1
         8       ;+4
         /4      LTAB1
         /0      LTAB1+1
         14      9
         14      8174
         4       +0
         14      9
         5       FIRST
         4       +0
         14      9
         5       LAST
LOOP     4       FIRST
         14      8191
         5       B
         14      18
         0       B
         9       ;+4
         /4      LTAB2
         14      8184
         8       ;+2
         /4      LTAB2
         15      6144
         10      FIRST
         4       LAST
         2       FIRST
         9       LOOP
         8       ;+3
NL       15      6144
         15      6144
         15      6144
         15      6144
OUTEND   4       CHOP
         1       +128
         9       CHOPE
         6       &177
         0       CHOPL
         /8      1
BLANKS   4       -46080          (-180*256)
         15      6144
         1       +256
         9       ;-2
         4       CHOPF
         2       -1
         5       CHOPF
         9       TESCOD
         8       OUTEND
(FAST BIT-COUNTING SUBROUTINE)
(Places the parity of the character in the
 Acctr. on entry in the Acctr.)
BITCTE   0       BITCTL
         14      8188
         1       =14 1
         5       ;+6
         4       +0
         14      4
         1       =14 1
         5       ;+5
         2       &323130         (Set Q-register)
TOTAL    >1
         5       TOTAL
         2       &323130         (Set Q-register)
BITCTL   >1
         1       TOTAL
         /8      1
(WORKSPACES)
CHIPF    >1                      (+0 on first entry to CHIPE S/R)
CHIPL    >1                      (Link)
CHIP     >1                      (Last character read in)
CHOPF    >1                      (+0 on first entry to CHOPE S/R)
CHOPL    >1                      (Link)
CHOPC    +1                      (Output telecode: +0=920, +1=903, &400000=legib
le)
BUFCT    >1                      (Line buffer pointer)
B
BAR
OPC      >1
FIRST    >1                      (Address of next character)
LAST     >1                      (Address of last character)
LINE     >61                     (Line buffer)
CHOP     >1
(CODE TABLE)
(A table for converting 920 Telecode to & from
 an internal 7-bit code. The internal code is basically
 903/ISO code, and is given below.)
CODTAB   &400000                 (0)
         &400000                 (1)
         &400000                 (2)
         &400013                 (3)
         &400000                 (4)
         &400000                 (5)
         &400000                 (6)
         &400000                 (7,     Bell)
         &400000                 (8)
         &405051                 (9,     Horizontal tab, <T>)
         &404454                 (10,     New line or Line feed, <N>)
         &400600                 (11,     Vertical tab or Throw)
         &400072                 (12)
         &400000                 (13)
         &400000                 (14)
         &400057                 (15)
         &400040                 (16)
         &400000                 (17)
         &400012                 (18)
         &400000                 (19)
         &407011                 (20,     Stopcode, <H>)
         &400000                 (21)
         &400000                 (22)
         &400000                 (23)
         &400050                 (24)
         &400000                 (25)
         &400000                 (26)
         &400043                 (27)
         &400024                 (28)
         &400046                 (29)
         &400052                 (30)
         &400000                 (31)
         &404000                 (32,     Space, <S>)
         &400061                 (33,     Exclamation mark)
         &417462                 (34,  "  Tilde or Ditto)
         &406600                 (35,  \  Sterling sign or 1/2)
         &030664                 (36,  $  Dollar sign)
         &413600                 (37,     Percentage sign)
         &407200                 (38,  &)
         &016667                 (39,  `  Acute accent or Apostrophe)
         &406070                 (40,     Open round bracket)
         &402335                 (41,     Close round bracket)
         &407477                 (42,  *)
         &413340                 (43,  +)
         &402476                 (44,  ,)
         &413453                 (45,  -)
         &417655                 (46,  .)
         &403645                 (47,  /)
         &414060                 (48,  0)
         &410200                 (49,  1)
         &410400                 (50,  2)
         &414663                 (51,  3)
         &411000                 (52,  4)
         &415265                 (53,  5)
         &415466                 (54,  6)
         &411600                 (55,  7)
         &412133                 (56,  8)
         &416271                 (57,  9)
         &403047                 (58,  :)
         &424074                 (59,  ;)
         &416675                 (60,  <)
         &417136                 (61,  =)
         &413042                 (62,  >)
         &412456                 (63,  ?  Suffix 10 or Question mark)
         &013077                 (64,  `  Grave accent or AT symbol)
         &420301                 (65,  A)
         &420502                 (66,  B)
         &424743                 (67,  C)
         &421104                 (68,  D)
         &425345                 (69,  E)
         &425546                 (70,  F)
         &421707                 (71,  G)
         &422110                 (72,  H)
         &426351                 (73,  I)
         &426552                 (74,  J)
         &422713                 (75,  K)
         &427154                 (76,  L)
         &423315                 (77,  M)
         &423516                 (78,  N)
         &427757                 (79,  O)
         &430073                 (80,  P)
         &434341                 (81,  Q)
         &434542                 (82,  R)
         &430703                 (83,  S)
         &435144                 (84,  T)
         &431305                 (85,  U)
         &431506                 (86,  V)
         &435747                 (87,  W)
         &436150                 (88,  X)
         &432311                 (89,  Y)
         &432512                 (90,  Z)
         &416153                 (91,  [)
         &406714                 (92,  \  Sterling sign or Reverse /)
         &412355                 (93,  ])
         &417356                 (94,  ^)
         &400117                 (95,     Left-pointing arrow)
         &013120                 (96,  `  Grave accent or AT symbol)
         &424361                 (97,  a)
         &424562                 (98,  b)
         &420723                 (99,  c)
         &425164                 (100,  d)
         &421325                 (101,  e)
         &421526                 (102,  f)
         &425767                 (103,  g)
         &426170                 (104,  h)
         &422331                 (105,  i)
         &422532                 (106,  j)
         &426600                 (107,  k)
         &423000                 (108,  l)
         &427200                 (109,  m)
         &427400                 (110,  n)
         &423600                 (111,  o)
         &434160                 (112,  p)
         &430321                 (113,  q)
         &430522                 (114,  r)
         &434763                 (115,  s)
         &431124                 (116,  t)
         &435365                 (117,  u)
         &435566                 (118,  v)
         &431727                 (119,  w)
         &432130                 (120,  x)
         &436371                 (121,  y)
         &436572                 (122,  z)
         &400000                 (123)
         &400000                 (124)
         &400000                 (125)
         &400000                 (126)
         &400000                 (127)
(ERROR INDICATIONS)
CH1      11      ERRORL
         8       ERRORE
         \PAR
         \ITY
         \ ER
         \ROR
         \.
CH2      11      ERRORL
         8       ERRORE
         \1ST
         \ CH
         \ARA
         \CTE
         \R N
         \OT
         \NEW
         \LIN
         \E.
CH3      11      ERRORL
         8       ERRORE
         \ILL
         \EGA
         \L C
         \HAR
         \ACT
         \ER.
CH4      11      ERRORL
         8       ERRORE
         \OVE
         \R 1
         \20
         \CHA
         \RAC
         \TER
         \S O
         \N L
         \INE
         \.
(LEGIBLE TAPE TABLES)
LTAB1    &000007
         &010013
         &021027
         &040046
         &051054
         &057066
         &075077
         &106110
         &121130
         &133141
         &147155
         &163171
         &200206
         &214216
         &220225
         &234241
         &247252
         &260266
         &274302
         &307314
         &323331
         &334343
         &351357
         &366375
         &404412
         &421427
         &435444
         &452461
         &470477
         &506515
         &521527
         &533540
         &547000
LTAB2    &000000
         &000000
         &000000
         &000277
         &003400
         &003630
         &177231
         &114602
         &100106
         &104777
         &177611
         &071207
         &042447
         &010010
         &000344
         &121341
         &073211
         &110646
         &040240
         &002002
         &000474
         &041201
         &100502
         &036102
         &022020
         &177420
         &022102
         &004010
         &004176
         &004010
         &004260
         &070010
         &004010
         &004010
         &004010
         &140300
         &100100
         &020020
         &004000
         &002002
         &000474
         &041201
         &100601
         &041074
         &101377
         &100302
         &120621
         &104601
         &103102
         &100611
         &104611
         &073010
         &004014
         &005377
         &004217
         &104611
         &104611
         &070576
         &104611
         &104611
         &071003
         &100501
         &020421
         &004407
         &073211
         &104611
         &104566
         &043211
         &104611
         &104576
         &143306
         &133166
         &004020
         &022102
         &100444
         &022044
         &022044
         &022044
         &100502
         &022020
         &004370
         &000160
         &104210
         &070001
         &001004
         &177011
         &004411
         &004776
         &177611
         &104611
         &104566
         &077201
         &100601
         &100502
         &177601
         &100601
         &100576
         &177611
         &104611
         &100777
         &004411
         &004401
         &077201
         &100601
         &110562
         &010377
         &004010
         &004010
         &177601
         &177601
         &040601
         &100577
         &000401
         &000777
         &004020
         &022102
         &100777
         &100200
         &100200
         &100377
         &001004
         &004004
         &001377
         &177404
         &000010
         &010040
         &177576
         &100601
         &100601
         &100576
         &177411
         &004411
         &004406
         &036102
         &100601
         &120502
         &136377
         &004431
         &024511
         &103106
         &104611
         &104611
         &071001
         &000401
         &177401
         &000401
         &077600
         &100200
         &100177
         &017440
         &040200
         &040040
         &017577
         &100100
         &020100
         &100177
         &141444
         &010010
         &010044
         &141401
         &001004
         &174004
         &001001
         &140641
         &110611
         &100605
         &101777
         &100601
         &100630
         &177231
         &114602
         &100201
         &100601
         &177404
         &001377
         &001004
         &004030
         &026010
         &004010
         &004000

((ERROR ROUTINE)

[ERRORL ERRORE CHOPF CHOPL CHOPE CHOPC]

(Prints out the error message following the entry
 instructions in alphanumeric group form, until
 a full-stop is found, then stops. The message
 is given in legible tape form)
ERRORL   >1
ERRORE   4       +0
         5       CHOPF
         4       &400000
         5       CHOPC
NEXTWD   4       -2
         5       COUNT
         10      ERRORL
         0       ERRORL
         /4      0
NEXTCH   5       WORD
         14      8180
         6       &77
         1       -14             (6-bit code test if .)
         7       STOP
         1       +46             (Restore 7-bit code)
         11      CHOPL
         8       CHOPE
         4       COUNT
         7       NEXTWD
         10      COUNT
         4       WORD
         14      6
         8       NEXTCH
STOP     4       +20
         11      CHOPL
         8       CHOPE
         8       ;+0
COUNT    >1
WORD     >1

[ST]
^2100                            ( put stack above literals )
ST       -1
         +4
         +68                     ( D )
         +69                     ( E )
         +70                     ( F )
         -1
         +0
         +4
         +86                     ( V )
         +65                     ( A )
         +76                     ( L )
         -2
         +6
         +7
         +85                     ( U )
         +80                     ( P )
         +68                     ( D )
         +65                     ( A )
         +84                     ( T )
         +69                     ( E )
         -3
         +12
         +4
         +66                     ( B )
         +73                     ( I )
         +78                     ( N )
         -4
         +21
         +4
         +68                     ( D )
         +69                     ( E )
         +67                     ( C )
         -5
         +27
         +4
         +66                     ( B )
         +65                     ( A )
         +82                     ( R )
         -6
$
%
<! Halt !>
