
on
telecode 903
at ptr file ..\HUNTER\ALG16KLG(HUNTER).BIN
j 8181
st 5124

enter 27 +65522

at ptr inline

cipher;
"begin"
   "comment" 12-NOV-2000;

   "integer" a,b,bmax,i,j,k,L,lx,m,n,r,steps,x,y,z; "real" eps,obj,s,z1;
   "real" "procedure" Wichmann;
   "begin"
      "comment" The Wichmann-Hill portable Wichmann number
                generator. B. A. Wichmann and I. D. Hill,
                An Efficient and Portable Pseudo-Wichmann Number
                Generator, Applied Statistics, 31 (No. 2),
                188-190 (1982) ;
      "real" w;
      x := 171 * (x - (x "div" 177) * 177) -  2 * (x "div" 177);
      y := 172 * (y - (y "div" 176) * 176) - 35 * (y "div" 176);
      z := 170 * (z - (z "div" 178) * 178) - 63 * (z "div" 178);
      "if" x < 0 "then" x := x + 30269;
      "if" y < 0 "then" y := y + 30307;
      "if" z < 0 "then" z := z + 30323;
      w := x/30269.0 + y/30307.0 + z/30323.0;
      Wichmann := w - entier(w) 
   "end" of Wichmann;

   "integer" "procedure" read; "read" read;

   "procedure" kopy(j,n,z,v); "value" n; "integer" j,n,z,v;
   "for" j := 1 "step" 1 "until" n "do" z:=v;

   "procedure" copy(j,n,z,v); "value" n; "integer" j,n; "real" z,v;
   "for" j := 1 "step" 1 "until" n "do" z:=v;

   "procedure" output(s,i,m,j,n,y); "value" m,n; "string" s;
      "integer" i,m,j,n; "real" y;
   "begin"
      "print" s;
      "for" i:=1 "step" 1 "until" m "do"
         "for" j:=1 "step" 1 "until" n "do"
            "if" (j "div" 10)*10=j-1 "then" "print" y
                                     "else" "print" same line, y
   "end" of output;

   "real" "procedure" sigma(j,n,x); "value" n; 
      "integer" j,n; "real" x;
   "begin"
      "procedure" L(s); "value" s; "real" s;
      "begin"
         "for" j:=1 "step" 1 "until" n "do" s:=s+x;
         sigma:=s
      "end" of L;
      L(0)
   "end" of sigma;

   "procedure" setrand(j,n,x); "value" n; "integer" j,n; "real" x;
   "begin"
      "real" z;
      copy(j,n,x,Wichmann);
      z:=sigma(j,n,x);
      copy(j,n,x,x/z)
   "end" of setrand;

   "procedure" norm(t,t1,i,c); "value" i,c; "real" "array" t,t1;
               "integer" i,c;
   "begin"
      "integer" j; "real" x;
      x:=sigma(j,c,t1[i,j]); 
      copy(j,c,t[i,j],"if" x>eps "then" t1[i,j]/x "else" 1/c)
   "end" of norm;

   "comment" program start;   

   digits(4); aligned(2,3); "print" ''L`12-NOV-2000'L``;
   "read" steps,a,r,x,y,z,eps;
   "print" 'seeds = `,same line,x,y,z; "read" n;
   "begin"
      "integer" "array" x[1:n];
      kopy(L,n,x[L],read);
      bmax:=0;
      kopy(L,n,bmax,"if" bmax<x[L] "then" x[L] "else" bmax);
      "begin"
         "integer" "array" p[1:bmax];
         "comment" set up pointer array P;
         kopy(L,bmax,p[L],0);
         b:=0;
         "for" L:=1 "step" 1 "until" n "do"
         "begin"
            "if" p[x[L]]=0 "then"
            "begin"
               b:=b+1; p[x[L]]:=b
            "end"
         "end" of pointer set up;
         "print" ''L`steps = `, same line,steps,''s5`A =`,a,''s5`B =`,b,
                 ''s5`N =`,n;
         "begin"
            "real" "array" t,t1[1:a,1:a],g,g1[1:a,1:b],d,d1,d2[1:a];
            "for" i:=1 "step" 1 "until" a "do"
            "begin"
               setrand(j,a,t[i,j]); setrand(k,b,g[i,k])
            "end";
            setrand(i,a,d2[i]);
            "comment" end of initialisation;

            "print" ''L`initial output'L``;
            output(' `,i,a,j,a,t[i,j]);
            "print" ''L``;
            output(' `,i,a,j,b,g[i,j]);
            "print" ''L``;
            "for" i:=1 "step" 1 "until" a "do" "print" same line, d2[i];

            "for" m:=1 "step" 1 "until" steps "do"
            "begin"
               obj:=0;
               copy(i,a,d[i],d2[i]); 
               copy(i,a,d2[i],0);
               "for" i:=1 "step" 1 "until" a "do"
               "begin"
                  copy(j,a,t1[i,j],0);
                  copy(k,b,g1[i,k],0)
               "end";

               "comment" do one scan through the message;
               "for" L:=1 "step" 1 "until" n "do"
               "begin"
                  lx:=p[x[L]];
                  copy(j,a,d1[j],g[j,lx]*sigma(i,a,t[i,j]*d[i]));
                  "comment" normalise d1 and keep track of objective function;
                  z1:=sigma(i,a,d1[i]);
                  obj:=obj+ln("if" z1>eps "then" z1 "else" eps);
                  copy(i,a,d1[i],"if" z1>eps "then" d1[i]/z1 "else" 1/a);
        
                  "for" i:=1 "step" 1 "until" a "do"
                  "begin"
                     "comment" generate average value of d in d2 and evaluate
                               contribution to g1 and t1;
                     d2[i]:=d2[i]+d1[i]/n;
                     g1[i,lx]:=g1[i,lx]+d1[i];
                     copy(j,a,t1[i,j],t1[i,j]+d[i]*d1[j])
                  "end";
                  "comment" transfer d1 back to d;
                  copy(i,a,d[i],d1[i])
               "end" of scan;

               "comment" normalise g and t, from g1 and t1;
               "for" i:=1 "step" 1 "until" a "do"
               "begin"
                  norm(t,t1,i,a);
                  norm(g,g1,i,b)
               "end" of normalise;
               "comment" output every r iterations;
               "if" (m "div" r)*R=m "then"
               "begin"
                  "print" ''L2`objective function = `, same line,
                          freepoint(6),obj;
                  output(' `,i,a,j,a,t[i,j])
               "end"
            "end" of steps loop;

            "print" ''L2`largest generation probabilities`;
            "for" i:=1 "step" 1 "until" a "do"
            "begin"
               "print" digits(2),i;
               "for" j:=1,2,3 "do"
               "begin"
                  z1:=0;
                  copy(k,b,z1,"if" z1<g[i,k] "then" g[i,k] "else" z1);
                  "for" L:=1 "step" 1 "until" n "do"
                  "begin"
                     "if" z1=g[i,p[x[L]]] "then"
                     "begin"
                        "print" same line, '  `,z1,digits(4),L,x[L];
                        g[i,p[x[L]]]:=0;
                        "goto" found
                     "end" of item
                   "end" of search;
found:
                "end" of line
             "end" of printing
          "end" of TGD block
       "end" of P block
    "end" of X block
"end" of program

  40  3  8  123  71  23  ?-5
  12
  27  76  45  27  76  45  27  76  45  27  76  45

<!!>
j 12
st 7943
select out tty
j 10
st 1727
sh t
