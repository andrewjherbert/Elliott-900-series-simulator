
((FLOATING-POINT INTERPRETER, 17/6/71)

[QF LN EXP SQRT SIN COS ARCTAN
CHIPL CHIPE CHOPL CHOPE ERRORL ERRORE]

QF +0 ( PSEUDO-S.C.R.;CONTAINS ADDRESS OF INSTRUCTION OBEYED )
 8 EXIT+3 (PACKED ENTRY )
 8 EXIT+5 (UNPACKED ENTRY )
 +0  (INTEGER TO REAL ADDRESS)
 +0  (REAL TO INTEGER ADDRESS)
 +0  (FRACTION TO REAL ADDRESS )
 +0  (REAL TO FRACTION ADDRESS)
(Added in 20/12/69 version:-)
 8 ;+0
(Replaces in previous version:-
 8 ERROR)

EXIT 0 QF
 /8 1
 +0  (FORMAT PARAMETER)
 4 +1
 8 ;+2
 4 +0
 5 ;-4
 8 INTERP



FUNCTION +0
ADDRESS +0
WS
FBREG +0

DLAMS
FPA +0
DLALS +0
 +0

FPB +0
 +0
 +0
LINK +0  (USED FOR SEVERAL SUBROUTINES )
WS8 +0
WS9 +0
WS10 +0
WS11 +0
WS12 +0
WS13 +0
WS14 +0
WS15 +0
WS16 +0
WS17 +0
WS18 +0
WS19 +0
WS20 +0
WS21 +0
WS22 +0
WS23 +0
WS24 +0
WS25 +0
WS26 +0
WS27 +0
WS28 +0
WS29 +0
WS30 +0
WS31 +0
WS32 +0
WS33 +0




DECODE 8 SETMOD (TRANSFER CONTROL TO APPROPRIATE ROUTINE)
 8 FADD
 8 FNADD
 8 FEXC
 8 FREAD
 8 FWRITE
 8 FCHANGE
 8 JZERO
 8 JUMP
 8 JNEG
 8 COUNT
 8 SAVELK
 8 FMUL
 8 FDIV
 8 FSHIFT
 8 QFIO



INTERP 10 QF
 0 QF
 /4 0
 7 EXIT
 6 +8191
 5 ADDRESS
 4 QF
 6 =15 0
 1 ADDRESS
 5 ADDRESS
 /4 0
 14 8179
 9 ;+4
 5 FUNCTION
 0 FUNCTION
 /8 DECODE
 6 +15
 5 FUNCTION
 4 ADDRESS
 1 FBREG
 5 ADDRESS
 8 ;-7



(THESE SUBROUTINES ASSUME THAT THE B REGISTER IS SET ON ENTRY TO THE FIRST ADDRESS )

 BTOFA /4 0 (PLACE FP NUMBER IN FPA)
 5 FPA
 4 EXIT+2
 7 ;+10      ( THE JUMP WILL BE TAKEN FOR  UNPACKED FORMAT )
 /4 1
 14 11
 14 8181
 5 FPA+2
 /4 1
 6 &377600
 5 FPA+1
SROUT 0 LINK
 /8 1
 /4 1
 5 FPA+1
 /4 2
 5 FPA+2
 8 ;-6

BTOFB /4 0 (PLACE FP NUMBER UNPACKED IN FPB)
 5 FPB
 4 EXIT+2
 7 ;+9
 /4 1
 14 11
 14 8181
 5 FPB+2
 /4 1
 6 &377600
 5 FPB+1
8 SROUT
 /4 1
 5 FPB+1
 /4 2
 5 FPB+2
 8 SROUT

 +0
FATOB 4 FPA (STORE CONTENTS OF FPA )
 /5 0
 4 EXIT+2
 7 STUNPK
 4 FPA+2
 1 +64 (EXP LESS -64 TEST )
 9 STZERO
 2 +127
 9 ERRO (EXP GR +64 )
 4 FPA+2
 6 &177
 5 FATOB-1
 4 FPA
 9 PKNEG
 4 FPA+1
 1 +64 (ROUND POSITIVE NUMBER )
 6 &777600
 1 FATOB-1
 9 ;+3
 /5 1
 8 SROUT
 6 +131071 (CARRY ONE )
 /5 1
 /10 0
 /4 0
 9 ;+2
 8 SROUT
 4 =8 0 (OVERFLOW IN MANTISSA )
 /5 0
 4 FPA+2
 1 +1
 2 +63
 9 ERRO (OVERFLOW IN EXPONENT )
 2 +63
 6 &177
 /5 1
 8 SROUT
STZERO 4 +0
 /5 0
 /5 1
 8 SROUT
PKNEG 4 FPA+1 (ROUTINE ROUNDS AWAY FROM ZERO)
 8 FATOB+16
STUNPK 4 FPA+1
 /5 1
 4 FPA+2
 /5 2
 8 SROUT



SCOUNT +0
SCTCORR +0
FSTAND 4 +0 (STANDARDISE FPA)
 5 SCOUNT
 5 SCTCORR
 4 FPA
 9 NEGST
 7 SB1
 6 &777400
 7 SMR
 14 1
 9 ;+3
 10 SCOUNT
 8 ;-3
 4 SCOUNT
 1 SCTCORR
 5 SCOUNT
 1 =14 0
 5 ;+4
 0 FPA+1
 14 1
 4 FPA
 14 0 (SHIFT FORMED BY PROGRAM )
 3 FPA+1
 5 FPA
 4 SCOUNT
 2 FPA+2
 5 FPA+2
 8 INTERP
SB1 4 +17
 5 SCTCORR
 4 FPA+1
 7 ;-5 (JUMP IF X=0)
 8 FSTAND+8
SMR 4 FPA (QUICKER TO SHIFT RIGHT )
 14 8191
 7 ;+3
 10 SCOUNT
 8 ;-3
 4 SCOUNT
 2 +16
 5 SCOUNT
 8 FSTAND+13

NEGST 2 =/15 8191
 7 SB3
 4 -1
 5 SCTCORR
 4 FPA
 14 1
 10 SCOUNT
 9 ;-2
 8 FSTAND+12
SB3 4 +17
 5 SCTCORR
 4 FPA+1
 14 1
 9 NEGST+5
 8 FSTAND+12



(Added in 20/12/69 version:-)

ERRF      4     +1        (Impermissible function)
          8     ;+6
ERRO      4     +2        (Overflow on 5 or 13 instruction)
          8     ;+4
ERRI      4     +3        (Overflow on real-to-integer)
          8     ;+2
ERRFR     4     +4        (Overflow on real-to-fraction)

          0     +0
          14    12
          1     £0.
          5     ;+6
          11    ERRORL
          8     ERRORE
          £QF
          £ERR
          £OR
          >1

(Replaces in previous version:-
ERRF 0 ;+2
 [IMPERMISSIBLE FUNCTION]
 8 ERROR
 0 ;+1
 +50897  [FQ]
 +40993  [ .]
 8 15

ERRI 0 ;+2 [OVERFLOW ON REAL TO INTEGER]
 8 ERROR
 0 ;+1
 +54482  [TR]
 +8649  [.I]
 8 ;+1
 0 QF+4 [RECOVERY;PLACE +131071 OR -131072 ]
 4 FPA [THIS IS ALSO USED FOR ERRFR]
 9 ;+4
 4 +131071
 /5 0
 8 INTERP
 4 =/0 0
 8 ;-3

ERRFR 0 ;+2 [OVERFLOW ON REAL TO FRACTION]
 8 ERROR
 0 ;+1
 +54482  [TR]
 +8646  [.F]
 8 ;+1
 0 QF+6 [RECOVERY;PLACE +.9999 OR -1.0]
 8 ERRI+6

ERRO 0 ;+2 [OVERFLOW ON 5 OR 13 INSTRUCTION ]
 8 ERROR
 0 ;+1
 +53202  [OR]
 +8646  [.F]
 8 ;+1
 4 FUNCTION
 1 -5
 7 OF5
 1 -8
 7 OF13
 8 ERRF
OF5 0 ADDRESS [PACK LARGEST NUMBER OF CORRECT SIGN]
 4 FPA
 9 ;+6
 4 +131071
 /5 0
 4 &377677
 /5 1
 8 INTERP
 4 =/0 0
 /5 0
 4 +63
 /5 1
 8 INTERP
OF13 4 FPA [LOAD LARGEST NUMBER WITH SIGN OF FPA]
 9 ;+7
 4 +131071
 5 FPA
 5 FPA+1
 4 +63
 5 FPA+2
 8 INTERP
 4 =/0 0
 5 FPA
 4 +0
 5 FPA+1
 4 +63
 5 FPA+2
 8 INTERP

 +0  [FORWARD MODIFIER]
 +0  [BACKWARD MODIFIER]
 +0  [ERROR COUNT]
ERROR 4 +141 [OUTPUT NEWLINE]
 15 6148
 4 +10
 15 6148

 /4 0
 15 6148
 14 8184
 15 6148
 /4 1
 15 6148
 14 8184
 15 6148
 /4 2
 5 9 [THIS MUST BE CHANGED FOR EXTRA STORE MODULES]

 4 +141 [OUTPUT NEWLINE]
 15 6148
 4 +10
 15 6148

 4 -50 [GIVE VISIBLE SIGNAL]
 5 ERROR-1
 4 +0
 15 6144
 10 ERROR-1
 4 ERROR-1
 9 ;-4
 8 ;+0
[FOR EXTRA STORE MODULES THE WAIT LINK IS PLACED AS FOLLOWS]
[ 11 ERROR-2
 3 ERROR-2
 4 ERROR-2
 2 +0
 5 ERROR-1
 /4 3
 1 =/0 0
 0 ERROR-1
 /5 15
 0 ERROR-2
 8 ;+0 ])



SETMOD 0 ADDRESS (SET PSEUDO B REGISTER)
 /4 0
 5 FBREG
 8 INTERP



FADD 0 ADDRESS
 11 LINK
 8 BTOFB (GET SECOND OPERAND)
 4 FPB (ADD FPA TO FPB)
 7 INTERP
 4 FPA
 7 FEXC+6
 0 FPA+1
 14 1
 4 FPA
 14 8191
 5 FPA
 3 FPA+1
 0 FPB+1
 14 1
 4 FPB
 14 8191
 5 FPB
 3 FPB+1
 10 FPA+2
 10 FPB+2
 4 FPA+2
 2 FPB+2
 9 NEG5
 2 +0
 1 =15 0
 6 =14 8191
 5 ;+6
 4 FPB+2
 5 FPA+2
 0 FPA+1
 14 1
 4 FPA
 +0
 3 FPA+1
 1 FPB
 5 FPA
 4 FPA+1
 1 FPB+1
 9 ;+3
 5 FPA+1
EXIT31 8 FSTAND
 10 FPA
 6 =15 8191
 8 ;-4
NEG5 1 =15 0
 6 =14 8191
 5 ;+4
 0 FPB+1
 14 1
 4 FPB
 +0
 3 FPB
 1 FPA
 5 FPA
 4 FPB
 1 FPA+1
 9 ;+2
 8 EXIT31-1
 10 FPA
 6 =15 8191
 8 EXIT31-1



FNADD 4 +0 (NEGATE FPA THEN JUMP TO FADD)
5 ;+12 ( CLEAR CARRY BIT )
 4 FPA+1
 7 ;+14
 2 +131071
 1 +1
 9 ;+8
 5 FPA+1
 4 FPA
 2 &777777
 1 ;+3
 5 FPA
 8 FADD
 +0   ( CARRY BIT )
 6 +131071
 10 ;-2
 8 ;-9
 ( HERE FOLLOWS TREATMENT OF SPECIAL CASES FOR FNADD )
 4 FPA
 1 =/8 0
 7 ;+5
 1 =/8 0
 7 ;+9
 4 FPA+1
 8 FNADD+4
 4 =/0 0
 5 FPA
 4 +1
 2 FPA+2
 5 FPA+2
 8 FADD
 4 =8 0
 5 FPA
 10 FPA+2
 8 FADD



FEXC 0 ADDRESS (EXCHANGE FPA WITH STORE)
 11 LINK
 8 BTOFB
 0 ADDRESS
 11 LINK
 8 FATOB
 4 EXIT+2
 5 ;+10
 4 +0
 5 EXIT+2
 0 ;+6
 11 LINK
 8 BTOFA
 4 ;+4
 5 EXIT+2
 8 INTERP
 0 FPB (MODIFIER)
 +0  (SAVE FORMAT PARAMETER)

FREAD 0 ADDRESS (LOAD FPA)
 11 LINK
 8 BTOFA
 8 INTERP

FWRITE 0 ADDRESS (STORE FPA)
 11 LINK
 8 FATOB
 8 INTERP



FCHANGE 4 ADDRESS (CONVERSION ROUTINES)
 6 +8191
 2 +8191
 7 AD8191
 2 +8191
 2 CONST
 9 ERRF
 2 CONST
 5 ;+3
 0 ;+2
 /8 ;+2
 +0  (MARKER)

QF6JMP 8 PSTAND (STANDARD PARAMETERS)
 8 EXIT+3 (PACKED FORMAT)
 8 EXIT+5 (UNPACKED FORMAT)
 8 ITOR (INTEGER TO REAL)
 8 RTOI (REAL TO INTEGER)
 8 FTOR (FRACTION TO REAL)
 8 RTOF (REAL TO FRACTION)
 8 IOINT (I/O INTEGERS)
 8 IORL (I/O REALS)
CONST +8  (GIVES MAX.ADDRESS EXCEPT 8191)
AD8191 8 PSET (SET PARAMETERS)


ITOR 0 QF+3
 /4 0
 5 FPA
 4 +0
 5 FPA+1
 4 +17
 5 FPA+2
 8 FSTAND

RTOI 4 FPA+2
 9 ;+13
 2 +17
 9 ERRI
 7 ;+3
 2 =15 0
 5 ;+2
 4 FPA
 14 0 (SHIFT FORMED BY PROGRAM )
 0 QF+4 (ROUTINE ROUNDS DOWN)
 /5 0
 4 =14 0 (REPLACE FOR CASE WHEN EXP=+17)
 5 ;-4
 8 INTERP
 4 =14 8175 (FPA HAS ABSOLUTE VALUE LESS THAN 1/2)
 8 ;-9

FTOR 0 QF+5
 /4 0
 5 FPA
 4 +0
 5 FPA+1
 5 FPA+2
 8 FSTAND

RTOF 4 FPA+2
 9 ;+3
 7 ;+11
 8 ERRFR
 1 +17
 9 ;+10
 1 =14 8175
 5 ;+2
 4 FPA
 14 0 (SHIFT FORMED BY PROGRAM)
 0 QF+6
 /5 0 (ROUTINE ROUNDS DOWN)
 8 INTERP
 4 =14 0 (EXPONENT= +0)
 8 ;-7
 4 =14 8175 (FPA HAS ABSOLUTE VALUE LESS THAN.000076)
 8 ;-9


JZERO 4 FPA
 7 JUMP
 8 INTERP

JUMP 4 QF
 6 =15 8191
 2 ADDRESS
 7 ;+0
 4 ADDRESS
 5 QF
 8 INTERP+1

JNEG 4 FPA
 9 JUMP
 8 INTERP

COUNT 0 ADDRESS
 /10 0
 8 INTERP

SAVELK 0 ADDRESS
 4 QF
 /5 0
 /10 0
 8 INTERP



FMUL 0 ADDRESS (GET SECOND OPERAND)
 11 LINK
 8 BTOFB
 4 FPA+2 (MULTIPLY FPA BY FPB)
 1 FPB+2
 5 FPA+2
 11 LINK
 8 DLMULT
 8 FSTAND


FDIV 0 ADDRESS (GET DIVISOR)
 11 LINK
 8 BTOFB
 4 FPA (DIVIDE FPA BY FPB)
 7 FSTAND (QUOTIENT = +0)
 0 FPA+1
 14 1
 4 FPA
 14 8191 (TO AVOID OVWRFLOW OF MANTISSA)
 3 WS+14
 5 WS+13
 4 FPB
 7 ERRO (DIVISOR = +0)
 5 WS+17
 4 FPB+1
 5 WS+18
 11 DLDIV
 8 DLDIV+1
 4 WS+28
 5 FPA
 4 WS+29
 5 FPA+1
 4 FPB+2
 2 FPA+2
1 +1
 5 FPA+2
 8 FSTAND

FSHIFT 4 ADDRESS (MULTIPLY BY 2**N AND STANDARDISE FPA)
 14 5
 14 8187
 1 FPA+2
 5 FPA+2
 8 FSTAND



DLMULT 4 FPB (MULTIPLY MANTISSAS OF FPA AND FPB)
 12 FPA
 5 WS+10
 3 WS+11
 4 FPB+1
 12 FPA
 14 8175
 3 WS+12
 1 WS+10
 5 FPA
 4 WS+11
 1 WS+12
 9 ;+19
 5 WS+11
 4 FPB
 12 FPA+1
 14 8175
 3 WS+12
 1 FPA
 5 FPA
 4 WS+12
 1 WS+11
 9 ;+6
 5 FPA+1
 7 ;+10
 4 FPA
 0 LINK
 /8 1
 6 =15 8191
 10 FPA
 8 ;-7
 6 +131071
 10 FPA
 8 ;-20
 4 FPA (CORRECTION FOR -1.0 TIMES -1.0 )
 2 =/0 0
 7 ;+2
 8 ;-12
 4 +131071
 5 FPA
 5 FPA+1
 8 ;-15

DLDIV +0
4 WS+14
0 +0
14 8191
3 WS+16
5 WS+15
4 +0
5 WS+30
5 WS+29
0 +0
4 WS+13
13 WS+17
5 WS+32
12 WS+17
3 WS+20
5 WS+19
4 WS+20
7 NOCARRY
2 +131071
1 +1
5 WS+20
4 WS+19
2 WS+13
1 -1
8 ;+3
NOCARRY 4 WS+19
2 WS+13
5 WS+19
4 WS+32
12 WS+18
14 8191
3 WS+33
2 WS+15
5 WS+21
4 WS+33
2 WS+16
5 WS+22
9 SUBT1
4 WS+21
8 ;+4
SUBT1 4 WS+21
1 -1
5 WS+21
7 L0
9 LNEG
LPOS 14 1
10 WS+30
9 JUMP1
8 ;-3
L0 4 +16
5 WS+30
8 JUMP1
LNEG 0 +0
14 1
10 WS+30
9 ;-2
JUMP1 4 WS+19
7 JUMP2
1 +1
7 JUMP2
1 -1
14 8191
10 WS+29
8 ;-6
JUMP2 4 WS+29
1 WS+30
2 +1
7 N1 (N=1&M=0)
4 WS+29
2 +16
5 WS+28
1 =14 0
5 SHIFT2
4 WS+29
2 +0
6 &17777
1 =14 0
5 SHIFT1
EVALUATE 0 WS+22
14 1
4 WS+21
SHIFT1 14 0 (SET BY PROGRAM)
3 WS+22
5 WS+21
0 WS+20
14 1
4 WS+19
SHIFT2 14 0 (SET BY PROGRAM)
3 WS+23
1 WS+21
5 WS+24
4 WS+23
1 WS+22
5 WS+25
9 ADD1
8 ;+2
ADD1 10 WS+24
0 WS+25
14 1
4 WS+24
14 8191
13 WS+17
5 WS+26
4 WS+28 (K>1)
2 =15 1
(=14 8193)
5 SHIFT3
0 +0
4 WS+26
SHIFT3 14 0 (SET BY PROGRAM)
3 WS+29
1 WS+32
5 WS+28
0 DLDIV
/8 1

N1 4 =14 8191
5 SHIFT1
4 =14 15
5 SHIFT2
4 +15
5 WS+28
8 EVALUATE
<! Halt !>