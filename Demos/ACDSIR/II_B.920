

SHIFT1	+0		( LINK  USED FOR ADD & SUBTRACT )

	0	W4	( HALVE MANTISSA OF R  )
	14	1
	4	W3
	14	8191
	5	W3	( AND RESTORE )
	3	W4

	0	W7	( HALVE MANTISSA OF R  )
	14	1
	4	W6
	14	8191
	5	W6	( AND RESTORE )
	3	W7

	10	W5	( INCREMENT EXPONENTS )
	10	W8

	0	SHIFT1	( EXIT )
	/8	1





PRIM31	+0		( LINK  R + R = R )

	11	RSTACK	( STORE R  R  IN W3 W4 W5 W6 W7 W8 )
	8	RSTACK+1

	4	W3
	7	EXTRAT	( JUMP IF R =0 )

	4	W6
	7	EXIT31+4	( JUMP TO EXIT IF R = 0 )

	11	SHIFT1	( HALVE MANTISSAE TO AVOID OVERFLOW )
	8	SHIFT1+1

	4	W5	( COMPARE EXPONENTS OF REAL NOS. )
	2	W8
	9	NEG5	( JUMP IF W5 > W8 )

	2	+0
	1	=15 0	( FORM SHIFT INSTRUCTION WITH EXP. DIFF. )
	6	=14 8191
	5	;+6	( SET SHIFT INSTRUCTION )

	4	W8	( SET EXPONENT OF ANSWER )
	5	W5

	0	W4
	14	1	( SET MANTISSA OF R  IN ACC. & A.R. )
	4	W3
	+0		( OBEY STORED SHIFT INSTRUCTION )

	3	W4
	1	W6	( ADD SHIFTED R  TO R  )
	5	W3
	4	W4
	1	W7
	9	;+8
	5	W4





EXIT31	11	STAND	( STANDARDISE W3 W4 W5 )
	8	STAND+1

	11	RRES	( STACK ANSWER )
	8	RRES+1

	0	PRIM31	( EXIT )
	/8	1

	6	=15 8191
	10	W3
	8	;-9

NEG5	6	=14 8191	( FORM SHIFT INSTRUCTION IF W5 > W8 )
	5	;+4

	0	W7
	14	1	( STORE MANTISSA OF R  IN ACC. & A.R. )
	4	W6
	+0		( OBEY STORED SHIFT )

	3	W7
	1	W3	( ADD SHIFTED R  TO R  )
	5	W3
	4	W7
	1	W4
	9	;+2
	8	EXIT31-1
	10	W3
	6	=15 8191
	8	EXIT31-1

EXTRAT	4	W6	( SET R  AS ANSWER IF R  = 0 )
	5	W3
	4	W7
	5	W4
	4	W8
	5	W5
	8	EXIT31

PRIM33	+0		( LINK.  R - R = R )

	11	RSTACK	( STORE R  R  IN W3 W4 W5 W6 W7 W8 )
	8	RSTACK+1

	4	W6
	9	;+16	( JUMP IF R  -VE. )

	4	W7
	7	;+11	( JUMP IF LEAST SIG. MANTISSA R  = 0 )

	2	+0	( OTHERWISE NEGATE R  )
	6	=15 8191
	5	W7
	4	W6
	2	+0
	1	=/15 8191
	5	W6

	4	PRIM33	( SET LINK IN PRIM31 )
	5	PRIM31
	8	PRIM31+3	( EXIT TO PRIM31 )

	4	W6	( NEGATE R  IF L/S PART = 0 )
	2	+0
	8	;-6

	1	=/0 0	( JUMP IF M/S PART OF R  = -1.0 )
	7	;+2
	8	;-17

	4	W7
	7	;+2	( JUMP IF L/S PART OF R  = 0 )
	8	;-18

	4	=8 0	( SET -R  = +.5 AND INCREMENT EXPONENT )
	10	W8
	8	;-15


DLMULT	+0		( LINK.  MULTIPLY W3 W4; BY W6 W7 )

	4	W6
	12	W3	( FORM W3 MULT. BY W6 AND STORE ACC. & A.R. )
	5	WS10
	3	WS11

	4	W7
	12	W3	( FORM W7 MULT. BY W3  SCALE  AND ADD TO RESULT )
	14	8175
	3	WS12
	1	WS10
	5	W3
	4	WS11
	1	WS12
	9	;+19
	5	WS11

	4	W6
	12	W4	( FORM W6 MULT. BY W4  SCALE  AND ADD TO RESULT )
	14	8175
	3	WS12
	1	W3
	5	W3
	4	WS12
	1	WS11
	9	;+6
	5	W4
	7	;+10	( JUMP IF L/S PART OF ANS. = 0 )

	4	W3
	0	DLMULT	( EXIT WITH M/S  PART OF ANS. IN ACC. )
	/8	1

	6	=15 8191
	10	W3
	8	;-7

	6	=15 8191
	10	W3
	8	DLMULT+14

	4	W3
	1	=/0 0
	7	;+2	( JUMP IF M/S PART OF ANS. = -1.0 )

	8	;-12
	4	=15 8191	( REPLACE -1.0 WITH +.9  )
	5	W3
	5	W4
	8	;-15


PRIM35	+0		( LINK.  R  MULT. BY R  = R  )

	11	RSTACK	( STORE R  R  IN W3 W4 W5 W6 W7 W8 )
	8	RSTACK+1

	4	W5
	1	W8	( ADD EXPONENTS FOR EXPONENT OF ANS. )
	5	W5

	11	DLMULT	( FORM W3 W4 MULT. BY W6 W7  )
	8	DLMULT+1

	11	STAND	( STANDARDISE RESULT )
	8	STAND+1

	11	RRES	( STACK RESULT )
	8	RRES+1

	0	PRIM35	( EXIT )
	/8	1




PRIM37	+0		( LINK.  R /R  = R )

	11	RSTACK	( STACK R  R  IN W3 W4 W5 W6 W7 W8 )
	8	RSTACK+1

	0	W4
	14	1
	4	W3
	14	8191	( HALVE MANTISSA OF R  TO AVOID OVERFLOW )
	3	W4
	5	W3
	7	;+16	( JUMP TO EXIT IF R  = 0 )

	10	W5	( INCREMENT EXPONENT OF R  )

	4	W6
	7	;+15	( JUMP TO ERROR IF R  = 0 )

	5	WS17
	4	W7
	5	WS18
	11	DLDIV	( DIVIDE W3 W4 BY W6 W7 )
	8	DLDIV+1

	4	W8
	2	W5	( SUBTRACT EXPONENTS FOR EXPONENT OF ANS. )
	5	W5

	11	STAND	( STANDARDISE RESULT )
	8	STAND+1

EXIT37	11	RRES	( STACK RESULT )
	8	RRES+1

	0	PRIM37	( EXIT )
	/8	1

	4	+9
	11	FAIL	( ERROR S/R  IF R  =0 )
	8	FAIL+1
	8	EXIT37	( & CONTINUES WITH  FT. PT   )




PRIM42	+0		( LINK.  R  < R  GIVES BOOLEAN RESULT )

	11	PRIM33	( FORM R  - R  )
	8	PRIM33+1

	4	W3	( & TEST RESULT )

	11	SET	( SET TRUE IF R  < R   FALSE OTHERWISE )
	9	SET+6
	8	SET+1

	0	PRIM42	( EXIT )
	/8	1




PRIM44	+0		( LINK.  R  < R  GIVES BOOLEAN RESULT )

	11	PRIM33	( FORM R  - R  )
	8	PRIM33+1

	4	W3	( & TEST RESULT )

	11	SET	( SET TRUE IF R  < R  )
	9	SET+6
	8	;+3

	0	PRIM44	( EXIT )
	/8	1

	7	SET+6	( SET TRUE IF R  = R  FALSE OTHERWISE )
	8	SET+1




PRIM46	+0		( LINK.  R  = R  GIVES BOOLEAN RESULT )

	11	PRIM33	( FORM R  - R  )
	8	PRIM33+1

	4	W3	( & TEST RESULT )

	11	SET	( SET TRUE IF R  = R  FALSE OTHERWISE )
	7	SET+6
	8	SET+1

	0	PRIM46	( EXIT )
	/8	1



PRIM48	+0		( LINK.  R  = R GIVES BOOLEAN RESULT )

	11	PRIM33	( FORM R  - R )
	8	PRIM33+1

	4	W3	( & TEST RESULT )

	11	SET	( SET FALSE IF R  = R  TRUE OTHERWISE )
	7	SET+1
	8	SET+6

	0	PRIM48	( EXIT )
	/8	1




PRIM50	+0		( LINK.  R  > R  GIVES BOOLEAN RESULT )

	11	PRIM33	( FORM R  - R  )
	8	PRIM33+1

	4	W3	( & TEST RESULT )

	11	SET	( SET FALSE IF R  > R  )
	9	SET+1
	8	;+3

	0	PRIM50	( EXIT )
	/8	1

	7	SET+1	( SET FALSE IF R  = R  TRUE ORHERWISE )
	8	SET+6




PRIM52	+0		( LINK.  R  > R  GIVES BOOLEAN RESULT )

	11	PRIM33	( FORM R  -R  )
	8	PRIM33+1

	4	W3	( & TEST RESULT )

	11	SET	( SET FALSE IF R  > R  TRUE OTHERWISE )
	9	SET+1
	8	SET+6

	0	PRIM52	( EXIT )
	/8	1



ITOR	+0		( LINK.  INTEGER TO REAL CONVERSION )

	0	W	( SET NUMBER POINTER IN B-REG.  )

	/4	3	( STORE I  IN W3  SET W4 = +0 )
	5	W3
	4	+0
	5	W4

	4	+17	( SET W5 = +17 )
	5	W5

	11	STAND	( STANDARDISE W3 W4 W5 )
	8	STAND+1

	4	W3	( MOVE W3 W4 W5 TO W6 W7 W8 )
	5	W6
	4	W4
	5	W7
	4	W5
	5	W8

	0	W	( SET NUMBER POINTER IN B-REG. )

	/4	0	( STORE I  IN W3  SET W4 = +0 )
	5	W3
	4	+0
	5	W4

	4	+17	( SET W5 = +17 )
	5	W5

	11	STAND	( STANDARDISE W3 W4 W5 )
	8	STAND+1

	11	RRES	( STACK RESULT )
	8	RRES+1

	0	ITOR	( EXIT )
	/8	1



PRIM53	+0		( LINK.  B  AND B  GIVES BOOLEAN RESULT )

	0	W	( SET BOOL. POINTER IN B-REG. )

	/4	0
	7	;+2	( JUMP IF B  FALSE )

	/4	3
	11	SET	( SET TRUE IF B  & B  ARE TRUE  FALSE OTHERWISE )
	7	SET+1
	8	SET+6

	0	PRIM53	( EXIT )
	/8	1




PRIM54	+0		( LINK.  B  OR B  GIVES BOOLEAN RESULT )

	0	W	(SET BOOL. POINTER IN B-REG. )

	/4	0
	11	SET
	7	;+4
	8	SET+6	( SET TRUE IF B  TRUE )

	0	PRIM54	( EXIT )
	/8	1

	/4	3
	7	SET+1	( SET TRUE IF B  TRUE  FALSE OTHERWISE )
	8	SET+6




PRIM55	+0		( LINK.  B  EQUIV. B  GIVES BOOLEAN RESULT )

	0	W	( SET BOOL. POINTER IN B-REG. )

	/4	0
	7	;+7	( JUMP IF B  FALSE )

	/4	3
	11	SET
	7	SET+1	( SET FALSE IF B  TRUE  B  FALSE )
	8	SET+6	( SET TRUE IF B  TRUE B  TRUE )

	0	PRIM55	( EXIT )
	/8	1

	/4	3
	11	SET
	7	SET+6	( SET TRUE IF B  & B  FALSE )
	8	SET+1	( SET FALSE IF B  FALSE B  TRUE )
	8	;-6




PRIM56	+0		( LINK.  B  IMPLIES B  GIVES BOOLEAN RESULT )

	0	W	( SET BOOL. POINTER IN B-REG. )

	/4	0
	11	SET
	7	SET+6	( SET TRUE IF B  FALSE )
	8	;+3

	0	PRIM56	( EXIT )
	/8	1

	/4	3
	7	SET+1	( SET FALSE IF B  TRUE  B  FALSE  TRUE OTHERWISE )
	8	SET+6





PRIM57	+0		( LINK.  NOT B  )

	0	W	( SET BOOL. POINTER IN B-REG. )

	/4	0
	11	SET
	7	SET+6	( SET TRUE IF B  FALSE )
	8	SET+1	( FALSE OTHERWISE )

	0	PRIM57	( EXIT )
	/8	1




CHEBY	+0		( LINK.  POLYNOMIAL CALCULATION )

	4	-23
	5	WS
	0	WS
	4	+0
	/5	B11+1	( CLEAR WS. FOR CHEBY )
	4	WS
	7	;+3
	10	WS
	8	;-6

	10	C
	4	C
	14	1
	5	WS	( SET POINTERS IN WS & WS1 )
	1	CSTART
	1	-4
	5	WS1

CONT	0	WS
	/4	B0-2
	5	W3	( STORE B   IN W3 W4 )
	/4	B0-1
	5	W4

	4	T
	5	W6
	4	T+1	( STORE CHEBY ARG. IN W6 W7 )
	5	W7

	11	DLMULT	(   OF X.B    )
	8	DLMULT+1

	0	W4
	14	1
	4	W3
	14	1
	5	WS3	(   OF B   .2X )

	3	WS4
	0	WS
	/4	B0
	2	WS3
	5	W3	(   2X.B   -B    )
	/4	B0+1
	2	WS4
	9	EXTRA6
	5	W4

	0	WS1
	/4	0
	1	W3	( ADD   C  )
	5	W3
	/4	1
	1	W4
	9	EXTRA5
	5	W4	(   OF  2X.B   -B   +C   =  B   )


	0	WS
	/5	B0-3	( STORE  OF B  )
	4	W3
	/5	B0-4

	4	+2
	2	WS
	5	WS	( ADJUST POINTERS & TEST FOR END )
	4	+2
	2	WS1
	5	WS1
	4	CSTART
	2	WS1
	9	;+2
	8	CONT	( JUMP IF NOT END )

	/4	B0
	/2	B0-4
	5	W3	( STORE   OF B  - B   AS ANSWER )
	/4	B0+1
	/2	B0-3
	9	;+4
	5	W4

	0	CHEBY	( EXIT )
	/8	1

	6	=15 8191
	5	W4
	4	=/15 8191
	1	W3
	5	W3
	8	;-7

EXTRA5	10	W3
	6	=15 8191
	8	CONT+32

EXTRA6	6	=15 8191
	5	W4
	4	=/15 8191
	1	W3
	5	W3
	8	CONT+25



PRIM61	+0		( LINK.  LOGARITHM )

	11	SINGLE	( STORE REAL NO. IN W3 W4 W5 )
	8	SINGLE+1

	4	W3
	7	EXTRA
	9	EXTRA	( JUMP TO ERROR IF NO. IS < 0 )

	2	=8 0
	7	ABC	( JUMP IF MOST SIG. PART OF MANTISSA = +.5 )

	0	W4
	14	1
	4	W3
	1	=/4 0	( ADD -  TO MANTISSA & MULT. BY 4 )
	14	2

	5	T	( STORE AS ARG. FOR CHEBY )
	3	T+1

	4	+12
	5	C	( SET NO. OF CONSTANTS & AND START LOCN. OF CONSTS. )
	4	D
	5	CSTART

	11	CHEBY	( POLYNOMIAL CALCULATION )
	8	CHEBY+1

	4	W3
	5	WS13	( SAVE CHEBY RESULT )
	4	W4
	5	WS16

	4	W5
	1	-1
	5	W3	( SET EXPONENT - 1 IN W3 )

	4	+0
	5	W4	( SET W4 = +0 )

	5	W8
	4	+17
	5	W5	( SET W5 = +17 )

	11	STAND	( STANDARDISE W3 W4 W5 )
	8	STAND+1



	4	&261344
	5	W6
	4	&057760	( LOG 2 )
	5	W7

	11	PRIM35	( EXPONENT - 1  MULT. BY LOG 2 )
	8	PRIM35+3

	4	WS13
	5	W6
	4	WS16
	5	W7
	11	PRIM31	( EXP. - 1 MULT. BY LOG 2  PLUS CHEBY RESULT )
	8	PRIM31+3

	0	PRIM61	( EXIT )
	/8	1

EXTRA	4	+13
	11	PAUSRT	( GIVES ERROR NO. 13 & CONTINUES WITH +0 )
	8	FAILEN
	4	+0
	8	ABC+7

ABC	4	W4
	7	;+2	( JUMP IF L/S PART OF MANTISSA = 0 )

	8	PRIM61+8
	4	W5
	2	+1
	7	;+2	( JUMP IF EXPONENT = +1 )

	8	PRIM61+8
	5	W3
	5	W4	( SET ANSWER = 0 IF ARG. = +1 )
	5	W5

	11	RRES	( STACK RESULT IN THIS CASE )
	8	RRES+1
	8	EXTRA-2



EXP	+0		( LINK.  EXPONENTIAL )

	11	SINGLE	( SET REAL NO. IN W3 W4 W5 )
	8	SINGLE+1

	9	;+7	( JUMP IF EXPONENT -VE. )

	2	+6
	9	EXTRAJ	( JUMP IF EXPONENT > +6 )

	1	-1
	9	SPECIA	( JUMP IF EXPONENT = +6 )

	4	W3
	7	ANIS1	( JUMP IF ARG. = +1 )

	4	+1
	5	W8
	4	&270524	( LOG E )
	5	W6
	4	&166236
	5	W7

	11	PRIM35	( X.LOG E BECOMES X )
	8	PRIM35+3

	11	PRIM59	( ENTIER  X.LOG E )
	8	PRIM59+1

	1	+1
	5	N	( SET N = ENTIER + 1 )

	4	W3
	5	W6	( SAVE X )
	4	W4
	5	W7
	4	W5
	5	W8

	4	N
	5	W3	( SET N IN W3 & W4 = +0 )
	4	+0
	5	W4

	4	+17
	5	W5	( SET W5 = +17 )

	11	STAND	( STANDARDISE W3 W4 W5 )
	8	STAND+1

	11	PRIM33	(  N - X )
	8	PRIM33+3

	4	W5
	9	EXTRA1	( JUMP IF EXPONENT IS -VE. )

	2	+1
	7	EXTRA3	( JUMP IF EXPONENT IS +1 )


RET1	4	W3
	1	=/8 0	( N - X -   )
	5	W3

	0	W4
	14	1
	4	W3
	14	1
	5	T	( STORE  2 N - X  - 1  AS CHEBY ARG. )
	3	T+1

	4	+8
	5	C
	4	ADDRES	( SET NO. OF CONSTANTS & AND START LOCN. OF CONSTS. )
	5	CSTART

	11	CHEBY
	8	CHEBY+1	( POLYNOMIAL CALCULATION )

	4	N
	5	W5	( SET EXPONENT OF ANSWER = N )

	11	STAND	( & STANDARDISE RESULT )
	8	STAND+1

	11	RRES	( STACK RESULT )
	8	RRES+1

	0	EXP	( EXIT )
	/8	1



SPECIA	4	W3	( IF EXP. = +6 CHECK FOR ARG > +40 )
	9	EXP+10
	2	=10 0
	9	EXTRA4	( JUMP TO ERROR IF ARG. > +40 )
	8	EXP+8

EXTRAJ	4	W3
	9	EXP+10
	8	EXTRA4	( IF EXP. > +6 ERROR IF MANTISSA IS +VE. )

EXTRA4	4	+12
	11	FAIL	( ERROR NO. 12 & CONTINUES WITH + FT. PT.   )
	8	FAIL+1
	8	SPECIA-4

EXTRA1	6	=14 8191
	5	;+4	( FORM SHIFT INSTR. IF EXP. IS -VE. )
	0	W4
	14	1
	4	W3
	+0
	3	W4	( FORM TRUE MANTISSA IF EXP. -VE. )
	5	W3
	8	RET1+1

EXTRA3	4	W3
	2	=8 0
	7	;+2	( IF ARG. = + 1 REPLACE WITH +.9  )
	8	RET1

	4	=15 8191
	5	W3
	5	W4
	8	RET1+1

ANIS1	4	=8 0
	5	W3	( IF MANTISSA IS ZERO GIVE +1 AS ANSWER )
	4	+0
	5	W4
	4	+1
	5	W5
	8	SPECIA-4



PRIM40	+0		( LINK.  R  ↑ R  = R )

	11	RSTACK	( STORE R  R  IN W3 W4 W5 W6 W7 W8 )
	8	RSTACK+1

	4	W3
	9	;+23	( JUMP TO ERROR IF R  -VE. )

	7	;+20	( JUMP WITH ANS. = 0  IF R  = 0 )

	4	W6
	7	;+28	( JUMP IF R  = 0 )

	5	WS5	( SAVE R  )
	4	W7
	5	WS6
	4	W8
	5	WS7

	11	PRIM61	( LOG R  )
	8	PRIM61+3

	4	WS5
	5	W6
	4	WS6
	5	W7
	4	WS7
	5	W8
	11	PRIM35	( R  LOG R  )
	8	PRIM35+3

	11	EXP	( EXP. R  LOG R  )
	8	EXP+3

	0	PRIM40	( EXIT )
	/8	1

	4	+19
	11	PAUSRT
	8	FAILEN	( ERROR NO. 19 IF R  -VE. )
	4	+0	( & CONTINUE WITH +0 )
	5	W3
	5	W4
	5	W5
	8	;+7

	4	=8 0
	5	W3	( SET ANS. = +1 IF R  = 0 )
	4	+0
	5	W4
	4	+1
	5	W5

	11	RRES	( STACK RESULT IN THIS CASE )
	8	RRES+1
	8	;-18



PRIM36	+0		( LINK.  I /I  = R  )

	11	ITOR	( INTEGER TO REAL CONVERSION )
	8	ITOR+1

	11	PRIM37	( R / R )
	8	PRIM37+3

	0	PRIM36	( EXIT )
	/8	1





PRIM39	+0		( LINK.  I  ↑ I  = R  )

	0	W	( SET NO. POINTER IN B-REG. )

	/4	0
	7	EXTRA2+5	( JUMP TO SET ANS. = 0 IF I  = 0 )

	/4	3
	9	EXTRA2	( JUMP IF I  -VE. )
	7	EXTRA2+11	( JUMP IF I  = 0 )

	2	+0
	5	WS5	( STORE -I  AS COUNT )

	4	+0
	5	MKR7	( SET MKR. +VE. IF I  +VE. )

	5	W4
	/4	0
	5	W3	( SET I  IN W3  +0 IN W4 )

	4	+17
	5	W5	( SET +17 IN W5 )

	11	STAND	( STANDARDISE W3 W4 W5 )
	8	STAND+1

	4	W3
	5	W6	( SAVE STANDARDISED I  )
	4	W4
	5	W7
	4	W5
	5	W8

	10	WS5	( INCREMENT COUNT & TEST )
	4	WS5
	9	;+2
	8	;+4	( END OF S/R IF COUNT = 0 )

	11	PRIM35	( I  MULT. BY I  IF COUNT IS -VE. )
	8	PRIM35+3
	8	;-6
	4	MKR7

	9	;+4	( JUMP IF MKR. -VE. )
	8	EXTRA2+8

EXIT39	0	PRIM39	( EXIT )
	/8	1


	4	W3
	5	W6	( SET I ↑ N IN W6 W7 W8 )
	4	W4
	5	W7
	4	W5
	5	W8

	4	=8 0
	5	W3	( SET +1 IN W3 W4 W5 )
	4	+0
	5	W4
	4	+1
	5	W5

	11	PRIM37	( FORM +1/ I  IF I  -VE. )
	8	PRIM37+3
	8	;-16

EXTRA2	5	WS5	( IF I  -VE. SET AS COUNT & SET MKR. -VE. )
	4	=/0 0
	5	MKR7

	4	+0
	8	PRIM39+11	( RETURN TO MAIN PART OF PROG. )

	5	W3
	5	W5	( SET ANS. = 0 IF I  = 0 )
	5	W4

	11	RRES	( STACK ANS. IN THIS CASE )
	8	RRES+1

	8	EXIT39

	4	=8 0
	5	W3	( SET ANS. = +1 IF I  = 0 )
	4	+1
	5	W5
	4	+0
	8	;-9



PRIM59	+0		( LINK. ENTIER R = I )

	0	W	( SET POINTER IN B-REG. )
	/4	2

	9	EXIT59+2	( JUMP IF EXPONENT -VE. )
	7	EXIT59+2	( JUMP IF EXP. IS ZERO )

	2	+17
	9	PRIM30+17	( ERROR NO. 3 IF ANS. TOO LARGE )
	7	;+7
	2	+0
	6	=14 8191	( FORM SHIFT INSTRUCTION WITH EXPONENT )
	5	;+2
	/4	0
	+0		( SHIFT REAL NUMBER )
	/5	0	( STORE RESULTING INTEGER )

EXIT59	0	PRIM59	( EXIT )
	/8	1

	/4	0
	9	;+3	( SET -1 AS ANS. IF EXP. AND MANTISSA -VE. )

	4	+0
	8	;-6	( SET +0 AS ANS. IF MANTISSA +VE. EXP. -VE. )

	4	-1
	8	;-8



PRIM58	+0		( LINK.  ABSOLUTE R  )

	0	W	( SET POINTER IN B-REG. )

	/4	0
	9	;+3	( JUMP IF R  -VE. )

EXIT58	0	PRIM58	( EXIT )
	/8	1

	1	=/0 0
	7	;+15	( JUMP IF M/S PART OF R  = -1.0 )

	/4	0
	2	+0
	/5	0	( OTHERWISE NEGATE R  )

	/4	1
	2	+0
	9	;+3
	/5	1

	8	EXIT58

	6	=15 8191
	/5	1
	/4	0
	1	=/15 8191
	/5	0

	8	EXIT58

	/4	1
	7	;+2	( JUMP IF L/S PART OF R  = 0 )

	8	EXIT58+4

	/10	2	( INCREMENT EXPONENT )
	4	=8 0
	8	;-7	( SET +.5 )


PRIM62	+0		( LINK.  SIGN R  )

	0	W	( SET POINTER IN B-REG. )

	/4	0
	7	;+6	( JUMP IF R  = 0 )

	9	;+7	( JUMP IF R  -VE. )

	4	+1
	/5	0	( SET +1 AS ANS. FOR +VE. NOS. )

	0	PRIM62	( EXIT )
	/8	1

	4	+0
	8	;-4	( SET +0 AS ANS. FOR ZERO )

	4	-1
	8	;-6	( SET -1 AS ANS. FOR -VE. NOS. )



DIV
	4	+6
	2	SP
	5	W
	1	+3
	5	SP
	0	W
	/4	3
	7	PRIM30+17
	5	WS1
	2	+1
	7	;+20
	1	-2
	7	;+20
	/4	0
	9	NNN
	/4	3
	9	NNN+8
	4	+0
	5	WS2
	/4	0
	0	+0
	14	8176
	13	WS1
	14	8191
	5	WS1
	4	WS2
	9	NNN+17
	4	WS1
	0	W
	/5	0

	8	NXPORD
	+0	( SPARE LOCN.)

	/4	0
	2	+0
	/5	0
	1	=/0 0
	7	PRIM30+17
	8	;-7
NNN	/4	3
	9	;+10
	/4	0
	2	+0
	/5	0
	4	=/0 0
	5	WS2
	8	DIV+20
	2	+0
	5	WS1
	8	;-5
	2	+0
	5	WS1
	/4	0
	2	+0
	/5	0
	8	DIV+18
	4	WS1
	2	+0
	8	NNN-10


DLDIV	+0
	4	W3
	5	WS13
	4	W4
	5	WS14
	11	DLDIV+13
	8	DLDIV+14
	4	WS29
	5	W4
	4	WS28
	5	W3
	0	DLDIV
	/8	1
	+0
	4	=15 8191
	5	WS15
	5	WS16
	4	+0
	5	WS20
	5	WS24
	5	WS25
	5	WS26
	4	+1
	5	WS19
	4	-6
	5	WS23
	0	WS23
	/4	WS19
	9	Z7
Z8	10	WS23
	10	WS23
	4	WS23
	9	;-6
	4	+0
	5	WS24
	4	WS17
	7	;+5
	14	1
	9	;+8
	10	WS24
	8	;-3
	4	+17
	5	WS24
	4	WS18
	7	DLDIV+7
	8	;-8
	4	=14 0
	1	WS24
	5	;+4
	0	WS18
	14	1
	4	WS17
	+0
	5	WS17
	3	WS18
	4	+0
	5	WS25
	4	WS13
	7	;+5
	14	1
	9	;+8
	10	WS25
	8	;-3
	4	+17
	5	WS25
	4	WS14
	7	Z5
	8	;-8
	4	WS25
	2	WS24
	9	;+3
	5	WS26
	8	;+3
	4	WS24
	5	WS25
	4	=14 0
	1	WS25
	5	;+7
	4	=14 0
	1	WS26
	5	;+10
	0	WS14
	14	1
	4	WS13
	+0
	5	W3
	3	W4
	0	WS16
	14	1
	4	WS15
Z4	+0
	3	W7
	5	W6
	9	Z3
	11	DLMULT
	8	DLMULT+1
	2	WS17
	9	Z10
	7	Z6
	0	W4
	14	1
	4	W3
	14	8191
	5	WS32
	3	WS33
	14	1
	13	WS17
	14	8191
	5	WS30
	5	W6
	4	+0
	5	W7
	4	WS17
	5	W3
	4	WS18
	5	W4
	11	DLMULT
	8	DLMULT+1
	2	WS32
	5	W3
	4	W4
	2	WS33
	9	;+3
	5	W4
	8	;+6
	6	=15 8191
	5	W4
	4	=/15 8191
	1	W3
	5	W3
	4	WS17
	2	=15 8191
	7	;+4
	4	WS18
	1	+.5
	9	Z1
Z2	4	W3
	9	Z9
	4	+0
	5	WS21
	8	;+14
	4	W3
	2	+0
	5	W3
	4	W4
	2	+0
	9	;+3
	5	W4
	8	;+6
	6	=15 8191
	5	W4
	4	=/15 8191
	1	W3
	5	W3
	4	W3
	7	;+2
	8	Z10
	4	W4
	0	+0
	14	8191
	13	WS17
	5	WS22
	4	WS21
	9	;+3
	4	WS22
	8	;+3
	4	WS22
	2	+0
	14	8176
	3	WS22
	1	WS30
	5	WS21
	0	WS22
	14	1
	4	WS21
	14	1
	3	WS29
	5	WS28
	4	WS20
	7	;+7
	0	WS29
	14	1
	4	WS28
	14	1
	3	WS29
	5	WS28
	4	WS19
	9	;+2
	8	DLDIV+7
	4	WS28
	2	+0
	5	WS28
	4	WS29
	2	+0
	9	;+3
	5	WS29
	8	DLDIV+7
	6	=15 8191
	5	WS29
	4	=/15 8191
	1	WS28
	5	WS28
	8	DLDIV+7
Z1	10	WS17
	8	Z2
Z3	4	+1
	2	Z4
	5	Z4
	0	WS18
	14	1
	4	WS17
	14	8191
	3	WS18
	5	WS17
	8	Z4-3
Z5	4	+0
	5	WS28
	5	WS29
	8	DLDIV+7
Z6	4	WS18
	2	W3
	9	;+2
	8	Z10
	10	WS20
	0	W4
	14	1
	4	W3
	14	8191
	5	W3
	3	W4
	8	Z4+9
Z7	0	WS23
	/4	WS19
	2	+0
	5	W3
	/4	WS20
	2	+0
	9	;+3
	5	W4
	8	;+6
	6	=15 8191
	5	W4
	4	=/15 8191
	1	W3
	5	W3
	4	W3
	9	;+9
	0	WS23
	/5	WS19
	4	W4
	/5	WS20
	4	WS19
	2	+0
	5	WS19
	8	Z8
	4	=15 8191
	5	W4
	8	;-10
Z9	5	WS21
	8	Z2+5
Z10	8	;+0




PRIM28	4	EXIT28+1	( R↑I=R )
	5	PRIM39
	4	SP
	1	-6
	5	W
	1	+3
	5	SP

	11	SINGLE
	8	SINGLE+1
	0	W
	/4	0
	7	EXTRA2+5
	/4	3
	7	EXTRA2+11
	9	;+6
	2	+0
	5	WS5
	4	+0
	5	MKR7
	8	PRIM39+18
	5	WS5
	4	=/0 0
	5	MKR7
EXIT28	8	PRIM39+18
	0	NXPORD-1


<! Halt !>